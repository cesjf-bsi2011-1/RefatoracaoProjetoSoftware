/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import classes.Utils;
import classes.Cliente;
import classes.Automovel;
import classes.Utils;
import java.util.Date;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.AutomovelDao;
import persistencia.ClienteDao;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import persistencia.AluguelDao;
import classes.Aluguel;        

        
public class FormAluguel extends javax.swing.JFrame {

   Cliente cliente = null;
   Automovel automovel = null;
   Aluguel aluguel = null;
   String okcliente = null;
   String okcarro = null;
   double random = 0;
   

           
    public FormAluguel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtclientes = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jfcpfbusca = new javax.swing.JFormattedTextField();
        jbbuscarcliente = new javax.swing.JButton();
        jbbuscatdsclientes = new javax.swing.JButton();
        jbconfirmarcliente = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtauto = new javax.swing.JTable();
        jbbuscatdsautos = new javax.swing.JButton();
        jbuscarauto = new javax.swing.JButton();
        jfplaca = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jbconfirmarautomovel = new javax.swing.JButton();
        jbuscaavancada = new javax.swing.JCheckBox();
        jtde = new javax.swing.JLabel();
        jtate = new javax.swing.JLabel();
        jlvalor = new javax.swing.JLabel();
        jctipo = new javax.swing.JComboBox();
        jltipo = new javax.swing.JLabel();
        jbbuscaavancada = new javax.swing.JButton();
        jtdevalor = new javax.swing.JFormattedTextField();
        jtatevalor = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jtnumaluguel = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtdataaluguel = new javax.swing.JTextField();
        jbconfirmarclocacao = new javax.swing.JButton();
        jfdatadevolucao = new javax.swing.JLabel();
        jtdatadevolucao = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jtvalorlocacao = new javax.swing.JTextField();
        jbsair = new javax.swing.JButton();
        jbcalcularvalorlocacao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Locações");
        setMinimumSize(new java.awt.Dimension(800, 700));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        jtclientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "CPF", "Habilitação", "Tipo", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtclientes.getTableHeader().setReorderingAllowed(false);
        jtclientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtclientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtclientes);

        jLabel4.setText("CPF:");

        try {
            jfcpfbusca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jbbuscarcliente.setText("Buscar Cliente ");
        jbbuscarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbbuscarclienteActionPerformed(evt);
            }
        });

        jbbuscatdsclientes.setText("Buscar Todos");
        jbbuscatdsclientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbbuscatdsclientesActionPerformed(evt);
            }
        });

        jbconfirmarcliente.setText("Confirmar Cliente");
        jbconfirmarcliente.setEnabled(false);
        jbconfirmarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbconfirmarclienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbconfirmarcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jfcpfbusca, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbbuscarcliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbbuscatdsclientes)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfcpfbusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbbuscarcliente)
                    .addComponent(jbbuscatdsclientes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbconfirmarcliente))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Automóvel"));

        jtauto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca", "Modelo", "Cor", "Ano", "Valor", "Placa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtauto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtautoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtauto);

        jbbuscatdsautos.setText("Buscar Todos");
        jbbuscatdsautos.setEnabled(false);
        jbbuscatdsautos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbbuscatdsautosActionPerformed(evt);
            }
        });

        jbuscarauto.setText("Buscar Automóvel");
        jbuscarauto.setEnabled(false);
        jbuscarauto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuscarautoActionPerformed(evt);
            }
        });

        try {
            jfplaca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("???-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfplaca.setEnabled(false);
        jfplaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfplacaActionPerformed(evt);
            }
        });

        jLabel3.setText("Placa");

        jbconfirmarautomovel.setText("Confirmar Automóvel");
        jbconfirmarautomovel.setEnabled(false);
        jbconfirmarautomovel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbconfirmarautomovelActionPerformed(evt);
            }
        });

        jbuscaavancada.setText("Busca Avançada");
        jbuscaavancada.setEnabled(false);
        jbuscaavancada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuscaavancadaActionPerformed(evt);
            }
        });

        jtde.setText("De:");
        jtde.setEnabled(false);

        jtate.setText("Até:");
        jtate.setEnabled(false);

        jlvalor.setText("Valor R$:");
        jlvalor.setEnabled(false);

        jctipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A - Moto", "B - Carro", "C - Caminhonete", "D - Ônibus", "E - Caminhão" }));
        jctipo.setSelectedIndex(-1);
        jctipo.setEnabled(false);
        jctipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jctipoActionPerformed(evt);
            }
        });

        jltipo.setText("Tipo");
        jltipo.setEnabled(false);

        jbbuscaavancada.setText("Busca Avançada");
        jbbuscaavancada.setEnabled(false);
        jbbuscaavancada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbbuscaavancadaActionPerformed(evt);
            }
        });

        try {
            jtdevalor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtdevalor.setEnabled(false);

        try {
            jtatevalor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtatevalor.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jfplaca, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbbuscatdsautos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbuscarauto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbuscaavancada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbbuscaavancada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlvalor)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jtde)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtdevalor, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtatevalor, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jltipo)
                            .addComponent(jctipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbconfirmarautomovel)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlvalor)
                            .addComponent(jltipo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtde)
                            .addComponent(jtate)
                            .addComponent(jctipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtdevalor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtatevalor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbbuscatdsautos)
                            .addComponent(jLabel3)
                            .addComponent(jbuscaavancada))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbuscarauto)
                            .addComponent(jfplaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbbuscaavancada))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jbconfirmarautomovel)
                .addGap(8, 8, 8))
        );

        jLabel1.setText("Número de Locação");

        jtnumaluguel.setEnabled(false);
        jtnumaluguel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtnumaluguelActionPerformed(evt);
            }
        });

        jLabel2.setText("Data de Locação");

        jtdataaluguel.setEnabled(false);
        jtdataaluguel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtdataaluguelActionPerformed(evt);
            }
        });

        jbconfirmarclocacao.setText("Confirmar Locação");
        jbconfirmarclocacao.setEnabled(false);
        jbconfirmarclocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbconfirmarclocacaoActionPerformed(evt);
            }
        });

        jfdatadevolucao.setText("Data de Devolução");

        try {
            jtdatadevolucao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtdatadevolucao.setEnabled(false);

        jLabel5.setText("Valor da Locação");

        jtvalorlocacao.setEnabled(false);
        jtvalorlocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtvalorlocacaoActionPerformed(evt);
            }
        });

        jbsair.setText("Sair");
        jbsair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsairActionPerformed(evt);
            }
        });

        jbcalcularvalorlocacao.setText("Calcular Valor Locação");
        jbcalcularvalorlocacao.setEnabled(false);
        jbcalcularvalorlocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbcalcularvalorlocacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtnumaluguel))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtdataaluguel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jfdatadevolucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtdatadevolucao))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtvalorlocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(125, 125, 125)
                                .addComponent(jbcalcularvalorlocacao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbconfirmarclocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbsair, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(jtnumaluguel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbconfirmarclocacao)
                            .addComponent(jbcalcularvalorlocacao)
                            .addComponent(jbsair)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jfdatadevolucao)
                            .addComponent(jLabel5))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtdataaluguel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtdatadevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtvalorlocacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtdataaluguelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtdataaluguelActionPerformed

    }//GEN-LAST:event_jtdataaluguelActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
Date data = new Date();
jtdataaluguel.setText(Utils.DateToStr(data));
jtdatadevolucao.setText(null);
jtdevalor.setText(null);
jtatevalor.setText(null);

    }//GEN-LAST:event_formWindowOpened

    private void jbbuscatdsautosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbbuscatdsautosActionPerformed
limparTabelaAutomovel();    
        jfplaca.setText("");
            
        ArrayList<Automovel> lista = AutomovelDao.getTodosAutomoveis();
        
        DefaultTableModel modelo = (DefaultTableModel)jtauto.getModel();
        
        if (!lista.isEmpty())
        {
            
            for(int i=0;i<lista.size();i++)
            {    
                if (lista.get(i).getStatus().equals("Disponível"))
                modelo.addRow(lista.get(i).getAutomovel());
            
        } if (modelo.getRowCount() == 0){
            JOptionPane.showMessageDialog(null,"Não existe Automóveis disponíveis para locação!!!");
        }
        
        }
        else {
          JOptionPane.showMessageDialog(null, "Nenhum Automóvel cadastrado!","ATENÇÃO!",JOptionPane.ERROR_MESSAGE);
        } 
     }//GEN-LAST:event_jbbuscatdsautosActionPerformed

    private void jbuscarautoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuscarautoActionPerformed

   automovel = AutomovelDao.getAutomovel(jfplaca.getText());
   System.out.println(automovel.getStatus());
   jbconfirmarautomovel.setEnabled(false);
   limparTabelaAutomovel();  
   
        DefaultTableModel modelo = (DefaultTableModel)jtauto.getModel();
        if (automovel != null)
        { 
            if (automovel.getStatus().equals("Disponível")){
            modelo.addRow(automovel.getAutomovel());
         jfplaca.setText(null); 
        }
        else
            JOptionPane.showMessageDialog(null, "Automóvel Inexistente!\nNão foi possivel encontrar o automóvel especificado!","ATENÇÃO!",JOptionPane.ERROR_MESSAGE);
    jfplaca.setText(null);
        

        

        }
 
    }//GEN-LAST:event_jbuscarautoActionPerformed

    private void jbbuscarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbbuscarclienteActionPerformed
jbconfirmarcliente.setEnabled(false);
limparTabelaCliente();
        cliente = ClienteDao.getCliente(jfcpfbusca.getText());
        
        DefaultTableModel modelo = (DefaultTableModel)jtclientes.getModel();
        if (cliente != null)
        {
            modelo.addRow(cliente.getCliente());
         jfcpfbusca.setText(null); 
        }
        else
            JOptionPane.showMessageDialog(null, "Cliente Inexistente!\nNão foi possivel encontrar o Cliente especificado!","ATENÇÃO!",JOptionPane.ERROR_MESSAGE);
    jfcpfbusca.setText(null);
    }//GEN-LAST:event_jbbuscarclienteActionPerformed

    private void jbbuscatdsclientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbbuscatdsclientesActionPerformed
jbconfirmarcliente.setEnabled(false);
        jfcpfbusca.setText("");
      limparTabelaCliente();
      
        ArrayList<Cliente> lista = ClienteDao.getTodosClientes();
        
        DefaultTableModel modelo = (DefaultTableModel)jtclientes.getModel();
        
        if (!lista.isEmpty())
        {
            
            for(int i=0;i<lista.size();i++)
            {
               
                
                modelo.addRow(lista.get(i).getCliente());
                         
                
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Nenhum Cliente cadastrado!","ATENÇÃO!",JOptionPane.ERROR_MESSAGE);
            
    }//GEN-LAST:event_jbbuscatdsclientesActionPerformed

    private void jbsairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsairActionPerformed
this.dispose();
    }//GEN-LAST:event_jbsairActionPerformed

    private void jtnumaluguelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtnumaluguelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtnumaluguelActionPerformed

    private void jbconfirmarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbconfirmarclienteActionPerformed
int linha = jtclientes.getSelectedRow();
String cpf = ((String)jtclientes.getModel().getValueAt(linha,2));
limparTabelaCliente();
DefaultTableModel modelo = (DefaultTableModel)jtclientes.getModel();
cliente = ClienteDao.getCliente(cpf);
modelo.addRow(cliente.getCliente());
aluguel = new Aluguel();
aluguel.setCliente(cliente);

if (cliente != null){
double random = Math.round(Math.random()*1000);
checanumerolocacao(random);
double numrandom = checanumerolocacao(random);
 jtnumaluguel.setText(Double.toString(numrandom));
 aluguel.setNumero(numrandom);
 jfcpfbusca.setEnabled(false);
 jbbuscarcliente.setEnabled(false);
 jbbuscatdsclientes.setEnabled(false);
jfplaca.setEnabled(true);
jbbuscatdsautos.setEnabled(true);
jbuscarauto.setEnabled(true);
jbuscaavancada.setEnabled(true);
jbconfirmarcliente.setEnabled(false);
jtclientes.setEnabled(false);
jtclientes.setRowSelectionAllowed(false);
okcliente = "ok";
JOptionPane.showMessageDialog(null,"Cliente Inserido com Sucesso!");
}


 else {
    
    JOptionPane.showMessageDialog(null,"Nenhum Cliente Selecionado!");
}

    }//GEN-LAST:event_jbconfirmarclienteActionPerformed

    private void jtclientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtclientesMouseClicked
 if (okcliente != "ok")
         {
             if (jtclientes.getSelectedRow()>=-1)
             {
                    jbconfirmarcliente.setEnabled(true);
     } else 
     {
                
     }
         }
    }//GEN-LAST:event_jtclientesMouseClicked

    private void jtautoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtautoMouseClicked
  if (jtauto.getSelectedRow()!= -1){
                    jbconfirmarautomovel.setEnabled(true);
     } else 
     {
         JOptionPane.showConfirmDialog(null,"Selecione um Automóvel!");
         
     }
    
    }//GEN-LAST:event_jtautoMouseClicked

    private void jbconfirmarautomovelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbconfirmarautomovelActionPerformed
int linha = jtauto.getSelectedRow();
String placa = ((String)jtauto.getModel().getValueAt(linha,5));
automovel = AutomovelDao.getAutomovel(placa);
limparTabelaAutomovel();
DefaultTableModel modelo = (DefaultTableModel)jtauto.getModel();
modelo.addRow(automovel.getAutomovel());
aluguel.setAutomovel(automovel);
if (aluguel.validahabilitacao() == "ok"){
                
jfplaca.setEnabled(false);
jbuscarauto.setEnabled(false);
jbbuscatdsautos.setEnabled(false);
jbconfirmarautomovel.setEnabled(false);
jtauto.setEnabled(false);
jtauto.setRowSelectionAllowed(false);
jbcalcularvalorlocacao.setEnabled(true);
jbconfirmarclocacao.setEnabled(false);
jtdatadevolucao.setEnabled(true);        
 JOptionPane.showMessageDialog(null,"Automóvel Inserido com Sucesso!!!");
 }
else 
{
 JOptionPane.showMessageDialog(null,"Não é possível alugar este veículo com esta habilitação!");
aluguel.setAutomovel(null);
limparTabelaAutomovel();
}
    }//GEN-LAST:event_jbconfirmarautomovelActionPerformed

    private void jbuscaavancadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuscaavancadaActionPerformed
if (jbuscaavancada.isSelected()){
jlvalor.setEnabled(true);
jtde.setEnabled(true);
jtdevalor.setEnabled(true);
jtate.setEnabled(true);
jtatevalor.setEnabled(true);
jctipo.setEnabled(true);
jltipo.setEnabled(true);
jbbuscaavancada.setEnabled(true);
jbbuscatdsautos.setEnabled(false);
jbuscarauto.setEnabled(false);
}
else
{
jlvalor.setEnabled(false);
jtde.setEnabled(false);
jtdevalor.setEnabled(false);
jtate.setEnabled(false);
jtatevalor.setEnabled(false);
jctipo.setEnabled(false);
jltipo.setEnabled(false);
jtdevalor.setText(null);
jtatevalor.setText(null);
jctipo.setSelectedIndex(-1);
jbbuscaavancada.setEnabled(false);
jbbuscatdsautos.setEnabled(true);
jbuscarauto.setEnabled(true);    
}
    }//GEN-LAST:event_jbuscaavancadaActionPerformed

    private void jbcalcularvalorlocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbcalcularvalorlocacaoActionPerformed
if (jtdatadevolucao.getText().equals("  /  /    ")){
    JOptionPane.showMessageDialog(null,"Preencha a Data de Devolução!");
}
else{ 
    
        try {    

            aluguel.setDatadevolucao(Utils.StrToDate(jtdatadevolucao.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(FormAluguel.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            aluguel.setDatalocacao(Utils.StrToDate(jtdataaluguel.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(FormAluguel.class.getName()).log(Level.SEVERE, null, ex);
        }
            aluguel.diferencaDias(aluguel.getDatalocacao(),aluguel.getDatadevolucao());
            if (aluguel.getNumerodias() <=0){
                JOptionPane.showMessageDialog(null,"Data de Devolução Não pode ser anterior ou igual a data de Hoje!\n (Locação Mínima: 1 dia)");
            } else {
            aluguel.calcularValorTotal();
            
    jtvalorlocacao.setText(Double.toString(aluguel.getValorTotal()));
    jbconfirmarclocacao.setEnabled(true);
}
}
    }//GEN-LAST:event_jbcalcularvalorlocacaoActionPerformed

    private void jfplacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfplacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jfplacaActionPerformed

    private void jtvalorlocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtvalorlocacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtvalorlocacaoActionPerformed

    private void jbconfirmarclocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbconfirmarclocacaoActionPerformed

if (aluguel.getAutomovel()!=null){
AluguelDao.addAluguel(aluguel);
aluguel.getAutomovel().Alugar();
AutomovelDao.atualizarAutomovel(automovel);
JOptionPane.showMessageDialog(null,"Locação Efetuada com sucesso!!!");
limparTabelaAutomovel();
limparTabelaCliente();
jfplaca.setEnabled(true);
jbuscarauto.setEnabled(true);
jbbuscatdsautos.setEnabled(true);
 jfcpfbusca.setEnabled(true);
 jbbuscarcliente.setEnabled(true);
 jbbuscatdsclientes.setEnabled(true);
 jtnumaluguel.setText(null);
 jbconfirmarautomovel.setEnabled(false);
 jbconfirmarcliente.setEnabled(false);
 jtdatadevolucao.setText(null);
 jtvalorlocacao.setText(null);
 this.dispose();
}
else{
    JOptionPane.showMessageDialog(null,"Adicione um Automóvel!");
}


    }//GEN-LAST:event_jbconfirmarclocacaoActionPerformed

    private void jctipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jctipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jctipoActionPerformed

    private void jbbuscaavancadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbbuscaavancadaActionPerformed
float de = 0;
float ate = 0;
      jbconfirmarautomovel.setEnabled(false);
      jfplaca.setText("");
      limparTabelaAutomovel();

        ArrayList<Automovel> lista = AutomovelDao.getTodosAutomoveis();
        
        DefaultTableModel modelo = (DefaultTableModel)jtauto.getModel();
        
        if (!lista.isEmpty())
            {
              for(int i=0;i<lista.size();i++)
                 {
                    if (lista.get(i).getStatus().equals("Disponível"))
                      { 
                  if (jtdevalor.getText().equals("    .  ") && jtatevalor.getText().equals("    .  ")){
                       de = 0;
                       ate = 0;
                  }  
                  else {
                  
                de = Float.parseFloat(jtdevalor.getText());
                ate = Float.parseFloat(jtatevalor.getText());
                  }
                
                float precoprd = lista.get(i).getValor();
                if (de == 0 && ate == 0 && jctipo.getSelectedIndex() == -1) {
                    JOptionPane.showMessageDialog(null,"Para busca avançada, deve-se preencher as especificações!");
                }
                       if (de >= 0 && ate >= 0 && jctipo.getSelectedIndex() > -1)
                          {
                         if (de <= precoprd && ate >= precoprd && jctipo.getSelectedItem().equals(lista.get(i).getTipo()))
                            {
                               modelo.addRow(lista.get(i).getAutomovel());
                                                                            }
                                                                          }
                         else {
                           if (de > 0 && ate > 0 && jctipo.getSelectedIndex() == -1) {
                             if (de <= precoprd && ate >= precoprd)
                               {
                                 modelo.addRow(lista.get(i).getAutomovel());
                               }
                            }
                         } 
               if (de == 0 && ate == 0 && jctipo.getSelectedIndex()> -1){
                    if (jctipo.getSelectedItem().equals(lista.get(i).getTipo())){
                       modelo.addRow(lista.get(i).getAutomovel());
                    }
                  } 
        }
     }
   }
  
   else {
        
            JOptionPane.showMessageDialog(null, "Nenhum Automóvel cadastrado nestas condições!!!","ATENÇÃO!",JOptionPane.ERROR_MESSAGE); 
    }//GEN-LAST:event_jbbuscaavancadaActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAluguel().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbbuscaavancada;
    private javax.swing.JButton jbbuscarcliente;
    private javax.swing.JButton jbbuscatdsautos;
    private javax.swing.JButton jbbuscatdsclientes;
    private javax.swing.JButton jbcalcularvalorlocacao;
    private javax.swing.JButton jbconfirmarautomovel;
    private javax.swing.JButton jbconfirmarcliente;
    private javax.swing.JButton jbconfirmarclocacao;
    private javax.swing.JButton jbsair;
    private javax.swing.JCheckBox jbuscaavancada;
    private javax.swing.JButton jbuscarauto;
    private javax.swing.JComboBox jctipo;
    private javax.swing.JFormattedTextField jfcpfbusca;
    private javax.swing.JLabel jfdatadevolucao;
    private javax.swing.JFormattedTextField jfplaca;
    private javax.swing.JLabel jltipo;
    private javax.swing.JLabel jlvalor;
    private javax.swing.JLabel jtate;
    private javax.swing.JFormattedTextField jtatevalor;
    private javax.swing.JTable jtauto;
    private javax.swing.JTable jtclientes;
    private javax.swing.JTextField jtdataaluguel;
    private javax.swing.JFormattedTextField jtdatadevolucao;
    private javax.swing.JLabel jtde;
    private javax.swing.JFormattedTextField jtdevalor;
    private javax.swing.JTextField jtnumaluguel;
    private javax.swing.JTextField jtvalorlocacao;
    // End of variables declaration//GEN-END:variables

private void limparTabelaCliente()
    {
        DefaultTableModel modelo = (DefaultTableModel)jtclientes.getModel();
        for (int i = jtclientes.getRowCount() -1; i >= 0; --i)
        {
            modelo.removeRow(i);
        }
        
    }
private void limparTabelaAutomovel()
    {
        DefaultTableModel modelo = (DefaultTableModel)jtauto.getModel();
        for (int i = jtauto.getRowCount() -1; i >= 0; --i)
        {
            modelo.removeRow(i);
        }
        
    }

public double checanumerolocacao (double random){

while (AluguelDao.getAluguel(random)!= null){
    random +=1;}
return random;
}

}
