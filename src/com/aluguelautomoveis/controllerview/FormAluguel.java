/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.aluguelautomoveis.controllerview;

import com.aluguelautomoveis.model.Cliente;
import com.aluguelautomoveis.model.Automovel;
import com.aluguelautomoveis.model.Utils;
import java.util.Date;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.aluguelautomoveis.model.dao.AutomovelDao;
import com.aluguelautomoveis.model.dao.ClienteDao;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.aluguelautomoveis.model.dao.AluguelDao;
import com.aluguelautomoveis.model.Aluguel;

public class FormAluguel extends javax.swing.JFrame {

    Cliente cliente = null;
    Automovel automovel = null;
    Aluguel aluguel = null;
    String okcliente = null;
    String okcarro = null;
    double random = 0;

    public FormAluguel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClientes = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        textFieldCpf = new javax.swing.JFormattedTextField();
        buttonBuscarCliente = new javax.swing.JButton();
        buttonBuscarTodosClientes = new javax.swing.JButton();
        buttonConfirmarCliente = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableAutomovel = new javax.swing.JTable();
        buttonBuscarTodosAutomoveis = new javax.swing.JButton();
        buttonBuscarAutomovel = new javax.swing.JButton();
        jfplaca = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jbconfirmarautomovel = new javax.swing.JButton();
        checkBoxBuscaAvancada = new javax.swing.JCheckBox();
        jtde = new javax.swing.JLabel();
        jtate = new javax.swing.JLabel();
        jlvalor = new javax.swing.JLabel();
        comboBoxTipoAutomovel = new javax.swing.JComboBox();
        jltipo = new javax.swing.JLabel();
        buttonBuscaAvancada = new javax.swing.JButton();
        textFormatterValorDe = new javax.swing.JFormattedTextField();
        textFormatterValorAte = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        textFieldNumeroLocacao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textFieldDataLocacao = new javax.swing.JTextField();
        jbconfirmarclocacao = new javax.swing.JButton();
        jfdatadevolucao = new javax.swing.JLabel();
        textFormattedDataDevolucao = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        textFieldValorLocacao = new javax.swing.JTextField();
        jbsair = new javax.swing.JButton();
        buttonCalcularValor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Locações");
        setMinimumSize(new java.awt.Dimension(800, 700));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        tableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "CPF", "Habilitação", "Tipo", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableClientes.getTableHeader().setReorderingAllowed(false);
        tableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableClientes);

        jLabel4.setText("CPF:");

        try {
            textFieldCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        buttonBuscarCliente.setText("Buscar Cliente ");
        buttonBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarClienteActionPerformed(evt);
            }
        });

        buttonBuscarTodosClientes.setText("Buscar Todos");
        buttonBuscarTodosClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarTodosClientesActionPerformed(evt);
            }
        });

        buttonConfirmarCliente.setText("Confirmar Cliente");
        buttonConfirmarCliente.setEnabled(false);
        buttonConfirmarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(buttonConfirmarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(textFieldCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonBuscarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonBuscarTodosClientes)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonBuscarCliente)
                    .addComponent(buttonBuscarTodosClientes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonConfirmarCliente))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Automóvel"));

        tableAutomovel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca", "Modelo", "Cor", "Ano", "Valor", "Placa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableAutomovel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAutomovelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableAutomovel);

        buttonBuscarTodosAutomoveis.setText("Buscar Todos");
        buttonBuscarTodosAutomoveis.setEnabled(false);
        buttonBuscarTodosAutomoveis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarTodosAutomoveisActionPerformed(evt);
            }
        });

        buttonBuscarAutomovel.setText("Buscar Automóvel");
        buttonBuscarAutomovel.setEnabled(false);
        buttonBuscarAutomovel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarAutomovelActionPerformed(evt);
            }
        });

        try {
            jfplaca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("???-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfplaca.setEnabled(false);
        jfplaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfplacaActionPerformed(evt);
            }
        });

        jLabel3.setText("Placa");

        jbconfirmarautomovel.setText("Confirmar Automóvel");
        jbconfirmarautomovel.setEnabled(false);
        jbconfirmarautomovel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbconfirmarautomovelActionPerformed(evt);
            }
        });

        checkBoxBuscaAvancada.setText("Busca Avançada");
        checkBoxBuscaAvancada.setEnabled(false);
        checkBoxBuscaAvancada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxBuscaAvancadaActionPerformed(evt);
            }
        });

        jtde.setText("De:");
        jtde.setEnabled(false);

        jtate.setText("Até:");
        jtate.setEnabled(false);

        jlvalor.setText("Valor R$:");
        jlvalor.setEnabled(false);

        comboBoxTipoAutomovel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A - Moto", "B - Carro", "C - Caminhonete", "D - Ônibus", "E - Caminhão" }));
        comboBoxTipoAutomovel.setSelectedIndex(-1);
        comboBoxTipoAutomovel.setEnabled(false);
        comboBoxTipoAutomovel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxTipoAutomovelActionPerformed(evt);
            }
        });

        jltipo.setText("Tipo");
        jltipo.setEnabled(false);

        buttonBuscaAvancada.setText("Busca Avançada");
        buttonBuscaAvancada.setEnabled(false);
        buttonBuscaAvancada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscaAvancadaActionPerformed(evt);
            }
        });

        try {
            textFormatterValorDe.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        textFormatterValorDe.setEnabled(false);

        try {
            textFormatterValorAte.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        textFormatterValorAte.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jfplaca, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonBuscarTodosAutomoveis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonBuscarAutomovel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(checkBoxBuscaAvancada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonBuscaAvancada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlvalor)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jtde)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFormatterValorDe, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textFormatterValorAte, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jltipo)
                            .addComponent(comboBoxTipoAutomovel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbconfirmarautomovel)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlvalor)
                            .addComponent(jltipo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtde)
                            .addComponent(jtate)
                            .addComponent(comboBoxTipoAutomovel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFormatterValorDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFormatterValorAte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonBuscarTodosAutomoveis)
                            .addComponent(jLabel3)
                            .addComponent(checkBoxBuscaAvancada))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonBuscarAutomovel)
                            .addComponent(jfplaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonBuscaAvancada))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jbconfirmarautomovel)
                .addGap(8, 8, 8))
        );

        jLabel1.setText("Número de Locação");

        textFieldNumeroLocacao.setEnabled(false);
        textFieldNumeroLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNumeroLocacaoActionPerformed(evt);
            }
        });

        jLabel2.setText("Data de Locação");

        textFieldDataLocacao.setEnabled(false);
        textFieldDataLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldDataLocacaoActionPerformed(evt);
            }
        });

        jbconfirmarclocacao.setText("Confirmar Locação");
        jbconfirmarclocacao.setEnabled(false);
        jbconfirmarclocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbconfirmarclocacaoActionPerformed(evt);
            }
        });

        jfdatadevolucao.setText("Data de Devolução");

        try {
            textFormattedDataDevolucao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        textFormattedDataDevolucao.setEnabled(false);

        jLabel5.setText("Valor da Locação");

        textFieldValorLocacao.setEnabled(false);
        textFieldValorLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldValorLocacaoActionPerformed(evt);
            }
        });

        jbsair.setText("Sair");
        jbsair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbsairActionPerformed(evt);
            }
        });

        buttonCalcularValor.setText("Calcular Valor Locação");
        buttonCalcularValor.setEnabled(false);
        buttonCalcularValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCalcularValorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textFieldNumeroLocacao))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textFieldDataLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jfdatadevolucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textFormattedDataDevolucao))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textFieldValorLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(125, 125, 125)
                                .addComponent(buttonCalcularValor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbconfirmarclocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbsair, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(textFieldNumeroLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbconfirmarclocacao)
                            .addComponent(buttonCalcularValor)
                            .addComponent(jbsair)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jfdatadevolucao)
                            .addComponent(jLabel5))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textFieldDataLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFormattedDataDevolucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldValorLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldDataLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldDataLocacaoActionPerformed

    }//GEN-LAST:event_textFieldDataLocacaoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        Date data = new Date();
        textFieldDataLocacao.setText(Utils.DateToStr(data));
        textFormattedDataDevolucao.setText(null);
        textFormatterValorDe.setText(null);
        textFormatterValorAte.setText(null);

    }//GEN-LAST:event_formWindowOpened

    private void buttonBuscarTodosAutomoveisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarTodosAutomoveisActionPerformed
        limparTabelaAutomovel();
        jfplaca.setText("");

        ArrayList<Automovel> lista = AutomovelDao.getTodosAutomoveis();

        DefaultTableModel modelo = (DefaultTableModel) tableAutomovel.getModel();

        if (!lista.isEmpty()) {

            for (int i = 0; i < lista.size(); i++) {
                if (lista.get(i).getStatus().equals("Disponível")) {
                    modelo.addRow(lista.get(i).getAutomovel());
                }

            }
            if (modelo.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Não existe Automóveis disponíveis para locação!!!");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Nenhum Automóvel cadastrado!", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
        }
     }//GEN-LAST:event_buttonBuscarTodosAutomoveisActionPerformed

    private void buttonBuscarAutomovelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarAutomovelActionPerformed

        automovel = AutomovelDao.getAutomovel(jfplaca.getText());
        System.out.println(automovel.getStatus());
        jbconfirmarautomovel.setEnabled(false);
        limparTabelaAutomovel();

        DefaultTableModel modelo = (DefaultTableModel) tableAutomovel.getModel();
        if (automovel != null) {
            if (automovel.getStatus().equals("Disponível")) {
                modelo.addRow(automovel.getAutomovel());
                jfplaca.setText(null);
            } else {
                JOptionPane.showMessageDialog(null, "Automóvel Inexistente!\nNão foi possivel encontrar o automóvel especificado!", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
            }
            jfplaca.setText(null);

        }

    }//GEN-LAST:event_buttonBuscarAutomovelActionPerformed

    private void buttonBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarClienteActionPerformed
        buttonConfirmarCliente.setEnabled(false);
        limparTabelaCliente();
        cliente = ClienteDao.getCliente(textFieldCpf.getText());

        DefaultTableModel modelo = (DefaultTableModel) tableClientes.getModel();
        if (cliente != null) {
            modelo.addRow(cliente.getCliente());
            textFieldCpf.setText(null);
        } else {
            JOptionPane.showMessageDialog(null, "Cliente Inexistente!\nNão foi possivel encontrar o Cliente especificado!", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
        }
        textFieldCpf.setText(null);
    }//GEN-LAST:event_buttonBuscarClienteActionPerformed

    private void buttonBuscarTodosClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarTodosClientesActionPerformed
        buttonConfirmarCliente.setEnabled(false);
        textFieldCpf.setText("");
        limparTabelaCliente();

        ArrayList<Cliente> lista = ClienteDao.getTodosClientes();

        DefaultTableModel modelo = (DefaultTableModel) tableClientes.getModel();

        if (!lista.isEmpty()) {

            for (int i = 0; i < lista.size(); i++) {

                modelo.addRow(lista.get(i).getCliente());

            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum Cliente cadastrado!", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_buttonBuscarTodosClientesActionPerformed

    private void jbsairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbsairActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbsairActionPerformed

    private void textFieldNumeroLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNumeroLocacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldNumeroLocacaoActionPerformed

    private void buttonConfirmarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmarClienteActionPerformed
        int linha = tableClientes.getSelectedRow();
        String cpf = ((String) tableClientes.getModel().getValueAt(linha, 2));
        limparTabelaCliente();
        DefaultTableModel modelo = (DefaultTableModel) tableClientes.getModel();
        cliente = ClienteDao.getCliente(cpf);
        modelo.addRow(cliente.getCliente());
        aluguel = new Aluguel();
        aluguel.setCliente(cliente);

        if (cliente != null) {
            double random = Math.round(Math.random() * 1000);
            checanumerolocacao(random);
            double numrandom = checanumerolocacao(random);
            textFieldNumeroLocacao.setText(Double.toString(numrandom));
            aluguel.setNumero(numrandom);
            textFieldCpf.setEnabled(false);
            buttonBuscarCliente.setEnabled(false);
            buttonBuscarTodosClientes.setEnabled(false);
            jfplaca.setEnabled(true);
            buttonBuscarTodosAutomoveis.setEnabled(true);
            buttonBuscarAutomovel.setEnabled(true);
            checkBoxBuscaAvancada.setEnabled(true);
            buttonConfirmarCliente.setEnabled(false);
            tableClientes.setEnabled(false);
            tableClientes.setRowSelectionAllowed(false);
            okcliente = "ok";
            JOptionPane.showMessageDialog(null, "Cliente Inserido com Sucesso!");
        } else {

            JOptionPane.showMessageDialog(null, "Nenhum Cliente Selecionado!");
        }

    }//GEN-LAST:event_buttonConfirmarClienteActionPerformed

    private void tableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableClientesMouseClicked
        if (okcliente != "ok") {
            if (tableClientes.getSelectedRow() >= -1) {
                buttonConfirmarCliente.setEnabled(true);
            } else {

            }
        }
    }//GEN-LAST:event_tableClientesMouseClicked

    private void tableAutomovelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAutomovelMouseClicked
        if (tableAutomovel.getSelectedRow() != -1) {
            jbconfirmarautomovel.setEnabled(true);
        } else {
            JOptionPane.showConfirmDialog(null, "Selecione um Automóvel!");

        }

    }//GEN-LAST:event_tableAutomovelMouseClicked

    private void jbconfirmarautomovelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbconfirmarautomovelActionPerformed
        int linha = tableAutomovel.getSelectedRow();
        String placa = ((String) tableAutomovel.getModel().getValueAt(linha, 5));
        automovel = AutomovelDao.getAutomovel(placa);
        limparTabelaAutomovel();
        DefaultTableModel modelo = (DefaultTableModel) tableAutomovel.getModel();
        modelo.addRow(automovel.getAutomovel());
        aluguel.setAutomovel(automovel);
        if (aluguel.validahabilitacao() == "ok") {

            jfplaca.setEnabled(false);
            buttonBuscarAutomovel.setEnabled(false);
            buttonBuscarTodosAutomoveis.setEnabled(false);
            jbconfirmarautomovel.setEnabled(false);
            tableAutomovel.setEnabled(false);
            tableAutomovel.setRowSelectionAllowed(false);
            buttonCalcularValor.setEnabled(true);
            jbconfirmarclocacao.setEnabled(false);
            textFormattedDataDevolucao.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Automóvel Inserido com Sucesso!!!");
        } else {
            JOptionPane.showMessageDialog(null, "Não é possível alugar este veículo com esta habilitação!");
            aluguel.setAutomovel(null);
            limparTabelaAutomovel();
        }
    }//GEN-LAST:event_jbconfirmarautomovelActionPerformed

    private void checkBoxBuscaAvancadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxBuscaAvancadaActionPerformed
        if (checkBoxBuscaAvancada.isSelected()) {
            jlvalor.setEnabled(true);
            jtde.setEnabled(true);
            textFormatterValorDe.setEnabled(true);
            jtate.setEnabled(true);
            textFormatterValorAte.setEnabled(true);
            comboBoxTipoAutomovel.setEnabled(true);
            jltipo.setEnabled(true);
            buttonBuscaAvancada.setEnabled(true);
            buttonBuscarTodosAutomoveis.setEnabled(false);
            buttonBuscarAutomovel.setEnabled(false);
        } else {
            jlvalor.setEnabled(false);
            jtde.setEnabled(false);
            textFormatterValorDe.setEnabled(false);
            jtate.setEnabled(false);
            textFormatterValorAte.setEnabled(false);
            comboBoxTipoAutomovel.setEnabled(false);
            jltipo.setEnabled(false);
            textFormatterValorDe.setText(null);
            textFormatterValorAte.setText(null);
            comboBoxTipoAutomovel.setSelectedIndex(-1);
            buttonBuscaAvancada.setEnabled(false);
            buttonBuscarTodosAutomoveis.setEnabled(true);
            buttonBuscarAutomovel.setEnabled(true);
        }
    }//GEN-LAST:event_checkBoxBuscaAvancadaActionPerformed

    private void buttonCalcularValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCalcularValorActionPerformed
        if (textFormattedDataDevolucao.getText().equals("  /  /    ")) {
            JOptionPane.showMessageDialog(null, "Preencha a Data de Devolução!");
        } else {

            try {

                aluguel.setDatadevolucao(Utils.StrToDate(textFormattedDataDevolucao.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(FormAluguel.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                aluguel.setDatalocacao(Utils.StrToDate(textFieldDataLocacao.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(FormAluguel.class.getName()).log(Level.SEVERE, null, ex);
            }
            aluguel.diferencaDias(aluguel.getDatalocacao(), aluguel.getDatadevolucao());
            if (aluguel.getNumerodias() <= 0) {
                JOptionPane.showMessageDialog(null, "Data de Devolução Não pode ser anterior ou igual a data de Hoje!\n (Locação Mínima: 1 dia)");
            } else {
                aluguel.calcularValorTotal();

                textFieldValorLocacao.setText(Double.toString(aluguel.getValorTotal()));
                jbconfirmarclocacao.setEnabled(true);
            }
        }
    }//GEN-LAST:event_buttonCalcularValorActionPerformed

    private void jfplacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfplacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jfplacaActionPerformed

    private void textFieldValorLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldValorLocacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldValorLocacaoActionPerformed

    private void jbconfirmarclocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbconfirmarclocacaoActionPerformed

        if (aluguel.getAutomovel() != null) {
            AluguelDao.addAluguel(aluguel);
            aluguel.getAutomovel().Alugar();
            AutomovelDao.atualizarAutomovel(automovel);
            JOptionPane.showMessageDialog(null, "Locação Efetuada com sucesso!!!");
            limparTabelaAutomovel();
            limparTabelaCliente();
            jfplaca.setEnabled(true);
            buttonBuscarAutomovel.setEnabled(true);
            buttonBuscarTodosAutomoveis.setEnabled(true);
            textFieldCpf.setEnabled(true);
            buttonBuscarCliente.setEnabled(true);
            buttonBuscarTodosClientes.setEnabled(true);
            textFieldNumeroLocacao.setText(null);
            jbconfirmarautomovel.setEnabled(false);
            buttonConfirmarCliente.setEnabled(false);
            textFormattedDataDevolucao.setText(null);
            textFieldValorLocacao.setText(null);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Adicione um Automóvel!");
        }


    }//GEN-LAST:event_jbconfirmarclocacaoActionPerformed

    private void comboBoxTipoAutomovelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxTipoAutomovelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxTipoAutomovelActionPerformed

    private void buttonBuscaAvancadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscaAvancadaActionPerformed
        float de = 0;
        float ate = 0;
        jbconfirmarautomovel.setEnabled(false);
        jfplaca.setText("");
        limparTabelaAutomovel();

        ArrayList<Automovel> lista = AutomovelDao.getTodosAutomoveis();

        DefaultTableModel modelo = (DefaultTableModel) tableAutomovel.getModel();

        if (!lista.isEmpty()) {
            for (int i = 0; i < lista.size(); i++) {
                if (lista.get(i).getStatus().equals("Disponível")) {
                    if (textFormatterValorDe.getText().equals("    .  ") && textFormatterValorAte.getText().equals("    .  ")) {
                        de = 0;
                        ate = 0;
                    } else {

                        de = Float.parseFloat(textFormatterValorDe.getText());
                        ate = Float.parseFloat(textFormatterValorAte.getText());
                    }

                    float precoprd = lista.get(i).getValor();
                    if (de == 0 && ate == 0 && comboBoxTipoAutomovel.getSelectedIndex() == -1) {
                        JOptionPane.showMessageDialog(null, "Para busca avançada, deve-se preencher as especificações!");
                    }
                    if (de >= 0 && ate >= 0 && comboBoxTipoAutomovel.getSelectedIndex() > -1) {
                        if (de <= precoprd && ate >= precoprd && comboBoxTipoAutomovel.getSelectedItem().equals(lista.get(i).getTipo())) {
                            modelo.addRow(lista.get(i).getAutomovel());
                        }
                    } else {
                        if (de > 0 && ate > 0 && comboBoxTipoAutomovel.getSelectedIndex() == -1) {
                            if (de <= precoprd && ate >= precoprd) {
                                modelo.addRow(lista.get(i).getAutomovel());
                            }
                        }
                    }
                    if (de == 0 && ate == 0 && comboBoxTipoAutomovel.getSelectedIndex() > -1) {
                        if (comboBoxTipoAutomovel.getSelectedItem().equals(lista.get(i).getTipo())) {
                            modelo.addRow(lista.get(i).getAutomovel());
                        }
                    }
                }
            }
        } else {

            JOptionPane.showMessageDialog(null, "Nenhum Automóvel cadastrado nestas condições!!!", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_buttonBuscaAvancadaActionPerformed
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAluguel().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBuscaAvancada;
    private javax.swing.JButton buttonBuscarAutomovel;
    private javax.swing.JButton buttonBuscarCliente;
    private javax.swing.JButton buttonBuscarTodosAutomoveis;
    private javax.swing.JButton buttonBuscarTodosClientes;
    private javax.swing.JButton buttonCalcularValor;
    private javax.swing.JButton buttonConfirmarCliente;
    private javax.swing.JCheckBox checkBoxBuscaAvancada;
    private javax.swing.JComboBox comboBoxTipoAutomovel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbconfirmarautomovel;
    private javax.swing.JButton jbconfirmarclocacao;
    private javax.swing.JButton jbsair;
    private javax.swing.JLabel jfdatadevolucao;
    private javax.swing.JFormattedTextField jfplaca;
    private javax.swing.JLabel jltipo;
    private javax.swing.JLabel jlvalor;
    private javax.swing.JLabel jtate;
    private javax.swing.JLabel jtde;
    private javax.swing.JTable tableAutomovel;
    private javax.swing.JTable tableClientes;
    private javax.swing.JFormattedTextField textFieldCpf;
    private javax.swing.JTextField textFieldDataLocacao;
    private javax.swing.JTextField textFieldNumeroLocacao;
    private javax.swing.JTextField textFieldValorLocacao;
    private javax.swing.JFormattedTextField textFormattedDataDevolucao;
    private javax.swing.JFormattedTextField textFormatterValorAte;
    private javax.swing.JFormattedTextField textFormatterValorDe;
    // End of variables declaration//GEN-END:variables

    private void limparTabelaCliente() {
        DefaultTableModel modelo = (DefaultTableModel) tableClientes.getModel();
        for (int i = tableClientes.getRowCount() - 1; i >= 0; --i) {
            modelo.removeRow(i);
        }

    }

    private void limparTabelaAutomovel() {
        DefaultTableModel modelo = (DefaultTableModel) tableAutomovel.getModel();
        for (int i = tableAutomovel.getRowCount() - 1; i >= 0; --i) {
            modelo.removeRow(i);
        }

    }

    public double checanumerolocacao(double random) {

        while (AluguelDao.getAluguel(random) != null) {
            random += 1;
        }
        return random;
    }

}
