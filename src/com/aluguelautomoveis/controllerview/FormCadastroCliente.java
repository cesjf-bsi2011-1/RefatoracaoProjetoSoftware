package com.aluguelautomoveis.controllerview;

import com.aluguelautomoveis.model.Cliente;
import javax.swing.JOptionPane;
import com.aluguelautomoveis.model.Utils;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import com.aluguelautomoveis.model.dao.ClienteDao;

/**
 *
 * @author Locadora de Veículo
 */
public class FormCadastroCliente extends javax.swing.JFrame {

    Cliente cliente = null;
    String okcliente = null;

    /**
     * Creates new form CadastroCliente
     */
    public FormCadastroCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtnome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtdatanascimento = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jcsexo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jfcpf = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jftelefone = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jfcelular = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jtemail = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtcnh = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jctipo = new javax.swing.JComboBox();
        jtcodigo = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jtrua = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jtnumero = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jtcomplemento = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jtbairro = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jtcidade = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jfcep = new javax.swing.JFormattedTextField();
        jLabel18 = new javax.swing.JLabel();
        jcestado = new javax.swing.JComboBox();
        jbinserir = new javax.swing.JButton();
        jbexcluir = new javax.swing.JButton();
        jbatualizar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jcbusca = new javax.swing.JCheckBox();
        jfcpfbusca = new javax.swing.JFormattedTextField();
        jbbuscacliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtclientes = new javax.swing.JTable();
        jbbuscartodos = new javax.swing.JButton();
        jbeditarcliente = new javax.swing.JButton();
        jbRelatorio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 700));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro Cliente"));

        jLabel1.setText("Nome Completo:");

        jtnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtnomeActionPerformed(evt);
            }
        });

        jLabel2.setText("Data de Nasc.");

        jLabel3.setText("Código:");

        try {
            jtdatanascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtdatanascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtdatanascimentoActionPerformed(evt);
            }
        });

        jLabel4.setText("Sexo:");

        jcsexo.setMaximumRowCount(3);
        jcsexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Feminino", "Masculino", " " }));
        jcsexo.setSelectedIndex(-1);

        jLabel5.setText("CPF:");

        try {
            jfcpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel6.setText("Telefone:");

        try {
            jftelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel7.setText("Celular:");

        try {
            jfcelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel9.setText("Email:");

        jLabel10.setText("CNH:");

        jLabel11.setText("Tipo:");

        jctipo.setMaximumRowCount(6);
        jctipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "D", "E", " " }));
        jctipo.setSelectedIndex(-1);

        jtcodigo.setEnabled(false);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(1, 1, 1)
                                .add(jtcodigo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jtnome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 330, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jtdatanascimento)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(1, 1, 1)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(2, 2, 2)
                                .add(jftelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jfcelular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jtemail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 169, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel6)
                                .add(59, 59, 59)
                                .add(jLabel7)
                                .add(102, 102, 102)
                                .add(jLabel9)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel10)
                            .add(jtcnh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 14, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel11)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(jctipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel4)
                            .add(jcsexo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 18, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jfcpf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel2)
                                    .add(jLabel3)
                                    .add(jLabel1))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jtnome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jtdatanascimento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jtcodigo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel5)
                                    .add(jLabel4))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jfcpf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jcsexo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel6)
                            .add(jLabel7)
                            .add(jLabel9)
                            .add(jLabel10))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jftelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jfcelular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jtemail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jtcnh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel11)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jctipo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(0, 14, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro Endereço"));

        jLabel12.setText("Rua/Av.");

        jLabel13.setText("Num.");

        jLabel14.setText("Compl.");

        jLabel15.setText("Bairro");

        jLabel16.setText("Cidade");

        jLabel17.setText("CEP");

        try {
            jfcep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel18.setText("UF");

        jcestado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Acre", "Alagoas", "Amapá", "Amazonas", "Bahia", "Ceará", "Distrito Federal", "Espírito Santo", "Goiás", "Maranhão", "Mato Grosso", "Mato Grosso do Sul", "Minas Gerais", "Paraná", "Paraíba", "Pará", "Pernambuco", "Piauí", "Rio de Janeiro", "Rio Grande do Norte", "Rio Grande do Sul", "Rondonia", "Roraima", "Santa Catarina", "Sergipe", "São Paulo", "Tocantins" }));
        jcestado.setSelectedIndex(-1);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel12)
                            .add(jLabel15)
                            .add(jtbairro))
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jtcidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 152, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel16))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jfcep, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel17))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel18)
                            .add(jcestado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jtrua)
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jtnumero, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel13))
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jtcomplemento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel14))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(jLabel13)
                    .add(jLabel14))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtrua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtnumero, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtcomplemento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel15)
                    .add(jLabel16)
                    .add(jLabel17)
                    .add(jLabel18))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtbairro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtcidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jfcep, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jcestado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        jbinserir.setText("Inserir Cliente");
        jbinserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbinserirActionPerformed(evt);
            }
        });

        jbexcluir.setText("Excluir Cliente");
        jbexcluir.setEnabled(false);
        jbexcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbexcluirActionPerformed(evt);
            }
        });

        jbatualizar.setText("Atualizar Cliente");
        jbatualizar.setEnabled(false);
        jbatualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbatualizarActionPerformed(evt);
            }
        });

        jButton4.setText("Sair");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Limpar Cliente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jcbusca.setText("Buscar Cliente");
        jcbusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbuscaActionPerformed(evt);
            }
        });

        try {
            jfcpfbusca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfcpfbusca.setEnabled(false);

        jbbuscacliente.setText("Buscar");
        jbbuscacliente.setEnabled(false);
        jbbuscacliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbbuscaclienteActionPerformed(evt);
            }
        });

        jtclientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Cpf", "Habilitação", "Tipo", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtclientes.getTableHeader().setReorderingAllowed(false);
        jtclientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtclientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtclientes);
        if (jtclientes.getColumnModel().getColumnCount() > 0) {
            jtclientes.getColumnModel().getColumn(0).setResizable(false);
            jtclientes.getColumnModel().getColumn(1).setResizable(false);
            jtclientes.getColumnModel().getColumn(2).setResizable(false);
            jtclientes.getColumnModel().getColumn(3).setResizable(false);
            jtclientes.getColumnModel().getColumn(4).setResizable(false);
            jtclientes.getColumnModel().getColumn(5).setResizable(false);
        }

        jbbuscartodos.setText("Buscar Todos");
        jbbuscartodos.setEnabled(false);
        jbbuscartodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbbuscartodosActionPerformed(evt);
            }
        });

        jbeditarcliente.setText("Editar Cliente");
        jbeditarcliente.setEnabled(false);
        jbeditarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbeditarclienteActionPerformed(evt);
            }
        });

        jbRelatorio.setText("Relatório");
        jbRelatorio.setEnabled(false);
        jbRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRelatorioActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jcbusca)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jfcpfbusca, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbbuscacliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbbuscartodos)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbeditarcliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jbinserir)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbexcluir)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbatualizar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbRelatorio, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 129, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jcbusca)
                    .add(jfcpfbusca, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jbbuscacliente)
                    .add(jbbuscartodos)
                    .add(jbeditarcliente))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton4)
                    .add(jButton1)
                    .add(jbinserir)
                    .add(jbexcluir)
                    .add(jbatualizar)
                    .add(jbRelatorio))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtnomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtnomeActionPerformed

    private void jtdatanascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtdatanascimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtdatanascimentoActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jbbuscaclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbbuscaclienteActionPerformed
        limparTabelaCliente();
        cliente = ClienteDao.getCliente(jfcpfbusca.getText());

        DefaultTableModel modelo = (DefaultTableModel) jtclientes.getModel();
        if (cliente != null) {
            modelo.addRow(cliente.getCliente());
            jfcpfbusca.setText(null);
        } else {
            JOptionPane.showMessageDialog(null, "Cliente Inexistente!\nNão foi possivel encontrar o Cliente especificado!", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
        }
        jfcpfbusca.setText(null);


    }//GEN-LAST:event_jbbuscaclienteActionPerformed

    private void jbinserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbinserirActionPerformed
        if (checacampos(null) == true) {
            double numercliente = Math.round(Math.random() * 1000);
            double random = checanumerocliente(numercliente);
            jtcodigo.setText(Double.toString(random));
            Cliente cliente = new Cliente();
            cliente.setCodigo(jtcodigo.getText());
            cliente.setNome(jtnome.getText());
            cliente.setCpf(jfcpf.getText());
            cliente.setRua(jtrua.getText());
            cliente.setCelular(jfcelular.getText());
            try {
                cliente.setDatanascimento(Utils.StrToDate(jtdatanascimento.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(FormCadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
            cliente.setNumero(jtnumero.getText());
            cliente.setComplemento(jtcomplemento.getText());
            cliente.setBairro(jtbairro.getText());
            cliente.setCidade(jtcidade.getText());
            cliente.setEstado(jcestado.getSelectedItem().toString());
            cliente.setCep(jfcep.getText());
            cliente.setTelefone(jftelefone.getText());
            cliente.setEmail(jtemail.getText());
            cliente.setHabilitacao(jtcnh.getText());
            cliente.setTipo(jctipo.getSelectedItem().toString());
            cliente.setSexo(jcsexo.getSelectedItem().toString());

            if (ClienteDao.getCliente(cliente.getCpf()) == null) {

                ClienteDao.addCliente(cliente);
                JOptionPane.showMessageDialog(null, "Cliente Cadastrado com Sucesso!");

                limpacampos();
            } else {
                JOptionPane.showMessageDialog(null, "Já existe Cliente Cadastrado com este CPF!!!");
            }
        }


    }//GEN-LAST:event_jbinserirActionPerformed

    private void jcbuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbuscaActionPerformed
        limpacampos();
        limparTabelaCliente();
        if (jcbusca.isSelected()) {
            jbbuscacliente.setEnabled(true);
            jbexcluir.setEnabled(false);
            jbatualizar.setEnabled(false);
            jbinserir.setEnabled(false);
            jfcpfbusca.setEnabled(true);
            jbbuscartodos.setEnabled(true);
            jtnome.setEnabled(false);
            jfcpf.setEnabled(false);
            jtrua.setEnabled(false);
            jtnumero.setEnabled(false);
            jtcomplemento.setEnabled(false);
            jtbairro.setEnabled(false);
            jtcidade.setEnabled(false);
            jcestado.setEnabled(false);
            jfcep.setEnabled(false);
            jftelefone.setEnabled(false);
            jtemail.setEnabled(false);
            jtcnh.setEnabled(false);
            jctipo.setEnabled(false);
            jtdatanascimento.setEnabled(false);
            jcsexo.setEnabled(false);
            jfcelular.setEnabled(false);
        } else {

            {
                jbeditarcliente.setEnabled(false);
                jbinserir.setEnabled(true);
                jbexcluir.setEnabled(false);
                jbatualizar.setEnabled(false);
                jbbuscacliente.setEnabled(false);
                jfcpfbusca.setEnabled(false);
                jbbuscartodos.setEnabled(false);
                jtnome.setEnabled(true);
                jfcpf.setEnabled(true);
                jtrua.setEnabled(true);
                jtnumero.setEnabled(true);
                jtcomplemento.setEnabled(true);
                jtbairro.setEnabled(true);
                jtcidade.setEnabled(true);
                jcestado.setEnabled(true);
                jfcep.setEnabled(true);
                jftelefone.setEnabled(true);
                jtemail.setEnabled(true);
                jtcnh.setEnabled(true);
                jctipo.setEnabled(true);
                jtdatanascimento.setEnabled(true);
                jcsexo.setEnabled(true);
                jfcelular.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jcbuscaActionPerformed

    private void jbexcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbexcluirActionPerformed
        String cpf = jfcpf.getText();
        if (ClienteDao.getCliente(cpf) != null) {

            int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja remover este cliente?", "Remover", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (resposta == 0) {
                ClienteDao.removerCliente(cpf);
                JOptionPane.showMessageDialog(null, "O cliente foi removido com sucesso!!!");
                jcbusca.setSelected(false);
                jbeditarcliente.setEnabled(false);
                jbexcluir.setEnabled(false);
                jbatualizar.setEnabled(false);
                jbinserir.setEnabled(true);
                limparTabelaCliente();
                limpacampos();
            } else {
                JOptionPane.showMessageDialog(null, "O cliente não foi removido.");
            }
        }
    }//GEN-LAST:event_jbexcluirActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpacampos();
        limparTabelaCliente();
        jbatualizar.setEnabled(false);
        jbexcluir.setEnabled(false);
        jbinserir.setEnabled(true);
        jcbusca.setSelected(false);
        jbeditarcliente.setEnabled(false);
        jbinserir.setEnabled(true);
        jbexcluir.setEnabled(false);
        jbatualizar.setEnabled(false);
        jbbuscacliente.setEnabled(false);
        jfcpfbusca.setEnabled(false);
        jbbuscartodos.setEnabled(false);
        jtnome.setEnabled(true);
        jfcpf.setEnabled(true);
        jtrua.setEnabled(true);
        jtnumero.setEnabled(true);
        jtcomplemento.setEnabled(true);
        jtbairro.setEnabled(true);
        jtcidade.setEnabled(true);
        jcestado.setEnabled(true);
        jfcep.setEnabled(true);
        jftelefone.setEnabled(true);
        jtemail.setEnabled(true);
        jtcnh.setEnabled(true);
        jctipo.setEnabled(true);
        jtdatanascimento.setEnabled(true);
        jcsexo.setEnabled(true);
        jfcelular.setEnabled(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jbbuscartodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbbuscartodosActionPerformed
        jfcpfbusca.setText("");
        limparTabelaCliente();

        ArrayList<Cliente> lista = ClienteDao.getTodosClientes();

        DefaultTableModel modelo = (DefaultTableModel) jtclientes.getModel();

        if (!lista.isEmpty()) {

            for (int i = 0; i < lista.size(); i++) {

                modelo.addRow(lista.get(i).getCliente());

            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum Cliente cadastrado!", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jbbuscartodosActionPerformed

    private void jtclientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtclientesMouseClicked
        if (okcliente != "ok") {
            if (jtclientes.getSelectedRow() >= -1) {
                jbeditarcliente.setEnabled(true);
                jbRelatorio.setEnabled(true);
                jbatualizar.setEnabled(false);
                jbexcluir.setEnabled(false);
                jbbuscacliente.setEnabled(false);
                jbbuscartodos.setEnabled(false);
            } else {

            }
        }
    }//GEN-LAST:event_jtclientesMouseClicked

    private void jbeditarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbeditarclienteActionPerformed
        int linha = jtclientes.getSelectedRow();
        String cpf = ((String) jtclientes.getModel().getValueAt(linha, 2));
        cliente = ClienteDao.getCliente(cpf);
        jtcodigo.setText(cliente.getCodigo());
        jtnome.setText(cliente.getNome());
        jfcpf.setText(cliente.getCpf());
        jtrua.setText(cliente.getRua());
        jtnumero.setText(cliente.getNumero());
        jtcomplemento.setText(cliente.getComplemento());
        jtbairro.setText(cliente.getBairro());
        jtcidade.setText(cliente.getCidade());
        jcestado.setSelectedItem(cliente.getEstado());
        jfcep.setText(cliente.getCep());
        jftelefone.setValue(cliente.getTelefone());
        jtemail.setText(cliente.getEmail());
        jtcnh.setText(cliente.getHabilitacao());
        jctipo.setSelectedItem(cliente.getTipo());
        jtdatanascimento.setText(Utils.DateToStr(cliente.getDatanascimento()));
        jcsexo.setSelectedItem(cliente.getSexo());
        jfcelular.setText(cliente.getCelular());
        jtnome.setEnabled(true);
        jfcpf.setEnabled(true);
        jtrua.setEnabled(true);
        jtnumero.setEnabled(true);
        jtcomplemento.setEnabled(true);
        jtbairro.setEnabled(true);
        jtcidade.setEnabled(true);
        jcestado.setEnabled(true);
        jfcep.setEnabled(true);
        jftelefone.setEnabled(true);
        jtemail.setEnabled(true);
        jtcnh.setEnabled(true);
        jctipo.setEnabled(true);
        jtdatanascimento.setEnabled(true);
        jcsexo.setEnabled(true);
        jfcelular.setEnabled(true);
        jcbusca.setSelected(false);
        limparTabelaCliente();
        jbeditarcliente.setEnabled(false);
        jbexcluir.setEnabled(true);
        jbatualizar.setEnabled(true);
    }//GEN-LAST:event_jbeditarclienteActionPerformed

    private void jbatualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbatualizarActionPerformed
        limparTabelaCliente();
        if (checacampos(null) == true) {
            Cliente cliente = new Cliente();
            cliente.setCodigo(jtcodigo.getText());
            cliente.setNome(jtnome.getText());
            cliente.setCpf(jfcpf.getText());
            cliente.setRua(jtrua.getText());
            cliente.setCelular(jfcelular.getText());
            try {
                cliente.setDatanascimento(Utils.StrToDate(jtdatanascimento.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(FormCadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
            cliente.setNumero(jtnumero.getText());
            cliente.setComplemento(jtcomplemento.getText());
            cliente.setBairro(jtbairro.getText());
            cliente.setCidade(jtcidade.getText());
            cliente.setEstado(jcestado.getSelectedItem().toString());
            cliente.setCep(jfcep.getText());
            cliente.setTelefone(jftelefone.getText());
            cliente.setEmail(jtemail.getText());
            cliente.setHabilitacao(jtcnh.getText());
            cliente.setTipo(jctipo.getSelectedItem().toString());
            cliente.setSexo(jcsexo.getSelectedItem().toString());

            ClienteDao.atualizarCliente(cliente);
            JOptionPane.showMessageDialog(null, "Cliente Atualizado com Sucesso!");
            jcbusca.setSelected(false);
            jbeditarcliente.setEnabled(false);
            jbexcluir.setEnabled(false);
            jbatualizar.setEnabled(false);
            jbinserir.setEnabled(true);
            limpacampos();

        }
    }//GEN-LAST:event_jbatualizarActionPerformed

    private void jbRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRelatorioActionPerformed
        FormRelCliente frc = new FormRelCliente();
        frc.setVisible(true);
        int linha = jtclientes.getSelectedRow();
        String cpf = ((String) jtclientes.getModel().getValueAt(linha, 0));
        cliente = ClienteDao.getCliente(cpf);
        FormRelCliente.cliente = cliente;

    }//GEN-LAST:event_jbRelatorioActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCadastroCliente().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbRelatorio;
    private javax.swing.JButton jbatualizar;
    private javax.swing.JButton jbbuscacliente;
    private javax.swing.JButton jbbuscartodos;
    private javax.swing.JButton jbeditarcliente;
    private javax.swing.JButton jbexcluir;
    private javax.swing.JButton jbinserir;
    private javax.swing.JCheckBox jcbusca;
    private javax.swing.JComboBox jcestado;
    private javax.swing.JComboBox jcsexo;
    private javax.swing.JComboBox jctipo;
    private javax.swing.JFormattedTextField jfcelular;
    private javax.swing.JFormattedTextField jfcep;
    private javax.swing.JFormattedTextField jfcpf;
    private javax.swing.JFormattedTextField jfcpfbusca;
    private javax.swing.JFormattedTextField jftelefone;
    private javax.swing.JTextField jtbairro;
    private javax.swing.JTextField jtcidade;
    private javax.swing.JTable jtclientes;
    private javax.swing.JTextField jtcnh;
    private javax.swing.JTextField jtcodigo;
    private javax.swing.JTextField jtcomplemento;
    private javax.swing.JFormattedTextField jtdatanascimento;
    private javax.swing.JTextField jtemail;
    private javax.swing.JTextField jtnome;
    private javax.swing.JTextField jtnumero;
    private javax.swing.JTextField jtrua;
    // End of variables declaration//GEN-END:variables

    public void limpacampos() {
        jtcodigo.setText(null);
        jtnome.setText(null);
        jfcpf.setText(null);
        jtrua.setText(null);
        jtnumero.setText(null);
        jtcomplemento.setText(null);
        jtbairro.setText(null);
        jtcidade.setText(null);
        jcestado.setSelectedItem(null);
        jfcep.setText(null);
        jftelefone.setValue(null);
        jtemail.setText(null);
        jtcnh.setText(null);
        jctipo.setSelectedItem(null);
        jtdatanascimento.setText(null);
        jcsexo.setSelectedItem(null);
        jfcelular.setText(null);
    }

    public boolean checacampos(String str) {
        str = "";

        if (jtnome.getText().trim().isEmpty()) {
            str += "Nome\n";
        }

        if (jtdatanascimento.getText().equals("  /  /    ")) {
            str += "Data de Nascimento\n";

        }

        if (jcsexo.getSelectedItem() == null) {
            str += "Sexo\n";

        }

        if (jfcpf.getText().equals("   .   .   -  ")) {
            str += "CPF\n";
        }

        if (jftelefone.getText().equals("(  )     -    ")) {
            str += "Telefone\n";

        }
        if (jtemail.getText().trim().isEmpty()) {
            str += "Email\n";

        }
        if (jtcnh.getText().trim().isEmpty()) {
            str += "CNH\n";

        }

        if (jctipo.getSelectedItem() == null) {
            str += "Tipo\n";

        }

        if (jtrua.getText().trim().isEmpty()) {
            str += "Rua\n";
        }
        if (jtnumero.getText().trim().isEmpty()) {
            str += "Número\n";
        }

        if (jtbairro.getText().trim().isEmpty()) {
            str += "Bairro\n";
        }
        if (jtcidade.getText().trim().isEmpty()) {
            str += "Cidade\n";

        }

        if (jfcep.getText().equals("     -   ")) {
            str += "CEP\n";

        }

        if (jcestado.getSelectedItem() == null) {
            str += "Estado\n";

        }

        if (str == ("")) {
            return true;
        } else {

            JOptionPane.showMessageDialog(null, "Favor preencher os seguintes campos: \n" + str);
            return false;
        }

    }

    private void limparTabelaCliente() {
        DefaultTableModel modelo = (DefaultTableModel) jtclientes.getModel();
        for (int i = jtclientes.getRowCount() - 1; i >= 0; --i) {
            modelo.removeRow(i);
        }

    }

    public double checanumerocliente(double numercliente) {
        ArrayList<Cliente> lista = ClienteDao.getTodosClientes();

        if (!lista.isEmpty()) {
            for (int i = 0; i < lista.size(); i++) {
                double testenumero = Double.parseDouble(lista.get(i).getCodigo());
                while (testenumero == numercliente) {
                    numercliente += 1;

                }
            }
        }
        return numercliente;
    }

}
