
package com.aluguelautomoveis.controllerview;

import com.aluguelautomoveis.model.Funcionario;
import java.util.Date;
import javax.swing.JOptionPane;
import com.aluguelautomoveis.model.Utils;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import com.aluguelautomoveis.model.dao.FuncionarioDao;

/**
 *
 * @author Locadora de Veículo
 */
public class FormCadastroFuncionario extends javax.swing.JFrame {

    /**
     * Creates new form CadastroFuncionario
     */
    public FormCadastroFuncionario() {
        initComponents();
    }
Funcionario funcionario = null;
String okfuncionario = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtnome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtdatanascimento = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jcsexo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jfcpf = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jftelefone = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jfcelular = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        jtemail = new javax.swing.JTextField();
        jtcodigo = new javax.swing.JTextField();
        jtusuario = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtsenha = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jtrua = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jtnumero = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jtcomplemento = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jtbairro = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jtcidade = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jfcep = new javax.swing.JFormattedTextField();
        jLabel18 = new javax.swing.JLabel();
        jcestado = new javax.swing.JComboBox();
        jbinserir = new javax.swing.JButton();
        jbexcluir = new javax.swing.JButton();
        jbatualizar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jcbusca = new javax.swing.JCheckBox();
        jfcpfbusca = new javax.swing.JFormattedTextField();
        jbbuscafuncionario = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtfuncionario = new javax.swing.JTable();
        jbbuscartodos = new javax.swing.JButton();
        jbeditarfuncionario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 750));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro Funcionário"));

        jLabel1.setText("Nome Completo:");

        jtnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtnomeActionPerformed(evt);
            }
        });

        jLabel2.setText("Data de Nasc.");

        jLabel3.setText("Código:");

        try {
            jtdatanascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtdatanascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtdatanascimentoActionPerformed(evt);
            }
        });

        jLabel4.setText("Sexo:");

        jcsexo.setMaximumRowCount(3);
        jcsexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Feminino", "Masculino", " " }));
        jcsexo.setSelectedIndex(-1);

        jLabel5.setText("CPF:");

        try {
            jfcpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel6.setText("Telefone:");

        try {
            jftelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel7.setText("Celular:");

        try {
            jfcelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel9.setText("Email:");

        jtcodigo.setEnabled(false);

        jLabel10.setText("Usuário");

        jLabel8.setText("Senha");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(1, 1, 1)
                                .add(jtcodigo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jtnome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 330, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jtdatanascimento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(1, 1, 1)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(2, 2, 2)
                                .add(jftelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jLabel6))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel7)
                            .add(jfcelular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel9)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(jtemail))))
                .add(8, 8, 8)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel4)
                            .add(jcsexo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel10))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jfcpf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel5)))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(40, 40, 40)
                                .add(jLabel8)
                                .add(0, 74, Short.MAX_VALUE))))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jtusuario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jtsenha)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(jLabel3)
                            .add(jLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jtnome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jtdatanascimento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jtcodigo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel5)
                            .add(jLabel4))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jfcpf, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jcsexo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(jLabel7)
                    .add(jLabel9)
                    .add(jLabel10)
                    .add(jLabel8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jftelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jfcelular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtemail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtusuario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtsenha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(0, 14, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro Endereço"));

        jLabel12.setText("Rua/Av.");

        jLabel13.setText("Num.");

        jLabel14.setText("Compl.");

        jLabel15.setText("Bairro");

        jLabel16.setText("Cidade");

        jLabel17.setText("CEP");

        try {
            jfcep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel18.setText("UF");

        jcestado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Acre", "Alagoas", "Amapá", "Amazonas", "Bahia", "Ceará", "Distrito Federal", "Espírito Santo", "Goiás", "Maranhão", "Mato Grosso", "Mato Grosso do Sul", "Minas Gerais", "Paraná", "Paraíba", "Pará", "Pernambuco", "Piauí", "Rio de Janeiro", "Rio Grande do Norte", "Rio Grande do Sul", "Rondonia", "Roraima", "Santa Catarina", "Sergipe", "São Paulo", "Tocantins" }));
        jcestado.setSelectedIndex(-1);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel12)
                            .add(jLabel15)
                            .add(jtbairro))
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jtcidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 152, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel16))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jfcep, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel17))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel18)
                            .add(jcestado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jtrua)
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jtnumero, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel13))
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jtcomplemento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel14))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(jLabel13)
                    .add(jLabel14))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtrua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtnumero, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtcomplemento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel15)
                    .add(jLabel16)
                    .add(jLabel17)
                    .add(jLabel18))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jtbairro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtcidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jfcep, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jcestado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        jbinserir.setText("Inserir Funcionario");
        jbinserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbinserirActionPerformed(evt);
            }
        });

        jbexcluir.setText("Excluir Funcionario");
        jbexcluir.setEnabled(false);
        jbexcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbexcluirActionPerformed(evt);
            }
        });

        jbatualizar.setText("Atualizar Funcionario");
        jbatualizar.setEnabled(false);
        jbatualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbatualizarActionPerformed(evt);
            }
        });

        jButton4.setText("Sair");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Limpar Funcionario");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jcbusca.setText("Buscar Funcionario");
        jcbusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbuscaActionPerformed(evt);
            }
        });

        try {
            jfcpfbusca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfcpfbusca.setEnabled(false);

        jbbuscafuncionario.setText("Buscar");
        jbbuscafuncionario.setEnabled(false);
        jbbuscafuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbbuscafuncionarioActionPerformed(evt);
            }
        });

        jtfuncionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Cpf", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtfuncionario.getTableHeader().setReorderingAllowed(false);
        jtfuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfuncionarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtfuncionario);
        if (jtfuncionario.getColumnModel().getColumnCount() > 0) {
            jtfuncionario.getColumnModel().getColumn(0).setResizable(false);
            jtfuncionario.getColumnModel().getColumn(1).setResizable(false);
            jtfuncionario.getColumnModel().getColumn(2).setResizable(false);
            jtfuncionario.getColumnModel().getColumn(3).setResizable(false);
        }

        jbbuscartodos.setText("Buscar Todos");
        jbbuscartodos.setEnabled(false);
        jbbuscartodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbbuscartodosActionPerformed(evt);
            }
        });

        jbeditarfuncionario.setText("Editar Funcionario");
        jbeditarfuncionario.setEnabled(false);
        jbeditarfuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbeditarfuncionarioActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jcbusca)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jfcpfbusca, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbbuscafuncionario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbbuscartodos)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbeditarfuncionario)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jbinserir)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbexcluir)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jbatualizar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jcbusca)
                    .add(jfcpfbusca, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jbbuscafuncionario)
                    .add(jbbuscartodos)
                    .add(jbeditarfuncionario))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton4)
                    .add(jButton1)
                    .add(jbinserir)
                    .add(jbexcluir)
                    .add(jbatualizar))
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Cadastro Funcionario");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
this.dispose();        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jbbuscafuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbbuscafuncionarioActionPerformed
limparTabelaFuncionario();
        funcionario = FuncionarioDao.getFuncionario(jfcpfbusca.getText());
        
        DefaultTableModel modelo = (DefaultTableModel)jtfuncionario.getModel();
        if (funcionario != null)
        {
            modelo.addRow(funcionario.getFuncionario());
         jfcpfbusca.setText(null); 
        }
        else
            JOptionPane.showMessageDialog(null, "Funcionario Inexistente!\nNão foi possivel encontrar o Funcionario especificado!","ATENÇÃO!",JOptionPane.ERROR_MESSAGE);
    jfcpfbusca.setText(null);
  
      
    }//GEN-LAST:event_jbbuscafuncionarioActionPerformed

    private void jbinserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbinserirActionPerformed
if (checacampos(null) == true){
double numerfuncionario = Math.round(Math.random()*1000);    
double random = checanumerofuncionario(numerfuncionario);
jtcodigo.setText(Double.toString(random));       
Funcionario funcionario = new Funcionario();
funcionario.setCodigo(jtcodigo.getText());
funcionario.setNome(jtnome.getText());
funcionario.setCpf(jfcpf.getText());
funcionario.setRua(jtrua.getText());
funcionario.setCelular(jfcelular.getText());
        try {
            funcionario.setDatanascimento(Utils.StrToDate(jtdatanascimento.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(FormCadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
funcionario.setNumero(jtnumero.getText());
funcionario.setComplemento(jtcomplemento.getText());
funcionario.setBairro(jtbairro.getText());
funcionario.setCidade(jtcidade.getText());
funcionario.setEstado(jcestado.getSelectedItem().toString());
funcionario.setCep(jfcep.getText());
funcionario.setTelefone(jftelefone.getText());
funcionario.setEmail(jtemail.getText());
funcionario.setSexo(jcsexo.getSelectedItem().toString());
funcionario.setUsuario(jtusuario.getText());
funcionario.setSenha(jtsenha.getText());

if (FuncionarioDao.getFuncionario(funcionario.getCpf()) == null){
    

FuncionarioDao.addFuncionario(funcionario);
JOptionPane.showMessageDialog(null,"Funcionario Cadastrado com Sucesso!");

limpacampos();
}

else 
{
    JOptionPane.showMessageDialog(null,"Já existe Funcionario Cadastrado com este CPF!!!");
}
}


    }//GEN-LAST:event_jbinserirActionPerformed

    private void jcbuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbuscaActionPerformed
limpacampos();
limparTabelaFuncionario();
if (jcbusca.isSelected())
{jbbuscafuncionario.setEnabled(true);
jbexcluir.setEnabled(false);
jbatualizar.setEnabled(false);
jbinserir.setEnabled(false);
jfcpfbusca.setEnabled(true);
jbbuscartodos.setEnabled(true);
jtnome.setEnabled(false);
jfcpf.setEnabled(false);
jtrua.setEnabled(false);
jtnumero.setEnabled(false);
jtcomplemento.setEnabled(false);
jtbairro.setEnabled(false);
jtcidade.setEnabled(false);
jcestado.setEnabled(false);
jfcep.setEnabled(false);
jftelefone.setEnabled(false);
jtemail.setEnabled(false);
jtdatanascimento.setEnabled(false);
jcsexo.setEnabled(false);
jfcelular.setEnabled(false);
jtusuario.setEnabled(false);
jtsenha.setEnabled(false);}

else
{
    
 {
jbeditarfuncionario.setEnabled(false);
jbinserir.setEnabled(true);
jbexcluir.setEnabled(false);
jbatualizar.setEnabled(false);
jbbuscafuncionario.setEnabled(false);
jfcpfbusca.setEnabled(false);
jbbuscartodos.setEnabled(false);
jtnome.setEnabled(true);
jfcpf.setEnabled(true);
jtrua.setEnabled(true);
jtnumero.setEnabled(true);
jtcomplemento.setEnabled(true);
jtbairro.setEnabled(true);
jtcidade.setEnabled(true);
jcestado.setEnabled(true);
jfcep.setEnabled(true);
jftelefone.setEnabled(true);
jtemail.setEnabled(true);
jtdatanascimento.setEnabled(true);
jcsexo.setEnabled(true);
jfcelular.setEnabled(true);
jtusuario.setEnabled(true);
jtsenha.setEnabled(true);
 }   
}
    }//GEN-LAST:event_jcbuscaActionPerformed

    private void jbexcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbexcluirActionPerformed
String cpf = jfcpf.getText(); 
if (FuncionarioDao.getFuncionario(cpf) != null){

int resposta = JOptionPane.showConfirmDialog(null,"Tem certeza que deseja remover este funcionário?","Remover",JOptionPane.YES_NO_OPTION ,JOptionPane.WARNING_MESSAGE);
if (resposta == 0){
FuncionarioDao.removerFuncionario(cpf);
JOptionPane.showMessageDialog(null,"O funcionario foi removido com sucesso!!!");
jcbusca.setSelected(false);
jbeditarfuncionario.setEnabled(false);
jbexcluir.setEnabled(false);
jbatualizar.setEnabled(false);
jbinserir.setEnabled(true);
limparTabelaFuncionario();
limpacampos();  
}
else {
    JOptionPane.showMessageDialog(null,"O funcionario não foi removido.");
          }
       }
    }//GEN-LAST:event_jbexcluirActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
 
    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
limpacampos();
limparTabelaFuncionario();
jbatualizar.setEnabled(false);
jbexcluir.setEnabled(false);
jbinserir.setEnabled(true);
jcbusca.setSelected(false);
jbeditarfuncionario.setEnabled(false);
jbinserir.setEnabled(true);
jbexcluir.setEnabled(false);
jbatualizar.setEnabled(false);
jbbuscafuncionario.setEnabled(false);
jfcpfbusca.setEnabled(false);
jbbuscartodos.setEnabled(false);
jtnome.setEnabled(true);
jfcpf.setEnabled(true);
jtrua.setEnabled(true);
jtnumero.setEnabled(true);
jtcomplemento.setEnabled(true);
jtbairro.setEnabled(true);
jtcidade.setEnabled(true);
jcestado.setEnabled(true);
jfcep.setEnabled(true);
jftelefone.setEnabled(true);
jtemail.setEnabled(true);
jtdatanascimento.setEnabled(true);
jcsexo.setEnabled(true);
jfcelular.setEnabled(true);
jtusuario.setEnabled(true);
jtsenha.setEnabled(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jbbuscartodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbbuscartodosActionPerformed
   jfcpfbusca.setText("");
      limparTabelaFuncionario();
      
        ArrayList<Funcionario> lista = FuncionarioDao.getTodosFuncionario();
        
        DefaultTableModel modelo = (DefaultTableModel)jtfuncionario.getModel();
        
        if (!lista.isEmpty())
        {
            
            for(int i=0;i<lista.size();i++)
            {
               
                
                modelo.addRow(lista.get(i).getFuncionario());
                         
                
            }
        }
        else
            JOptionPane.showMessageDialog(null, "Nenhum Funcionario cadastrado!","ATENÇÃO!",JOptionPane.ERROR_MESSAGE);
            
                
    }//GEN-LAST:event_jbbuscartodosActionPerformed

    private void jtfuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfuncionarioMouseClicked
if (okfuncionario != "ok")
         {
             if (jtfuncionario.getSelectedRow()>=-1)
             {
                    jbeditarfuncionario.setEnabled(true);
                    jbatualizar.setEnabled(false);
                    jbexcluir.setEnabled(false);
                    jbbuscafuncionario.setEnabled(false);
                    jbbuscartodos.setEnabled(false);
     } else 
     {
                
     }
         }
    }//GEN-LAST:event_jtfuncionarioMouseClicked

    private void jbeditarfuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbeditarfuncionarioActionPerformed
int linha = jtfuncionario.getSelectedRow();
String cpf = ((String)jtfuncionario.getModel().getValueAt(linha,2));
funcionario = FuncionarioDao.getFuncionario(cpf);
jtcodigo.setText(funcionario.getCodigo());
jtnome.setText(funcionario.getNome());
jfcpf.setText(funcionario.getCpf());
jtrua.setText(funcionario.getRua());
jtnumero.setText(funcionario.getNumero());
jtcomplemento.setText(funcionario.getComplemento());
jtbairro.setText(funcionario.getBairro());
jtcidade.setText(funcionario.getCidade());
jcestado.setSelectedItem(funcionario.getEstado());
jfcep.setText(funcionario.getCep());
jftelefone.setValue(funcionario.getTelefone());
jtemail.setText(funcionario.getEmail());
jtdatanascimento.setText(Utils.DateToStr(funcionario.getDatanascimento()));
jcsexo.setSelectedItem(funcionario.getSexo());
jfcelular.setText(funcionario.getCelular());
jtusuario.setText(funcionario.getUsuario());
jtsenha.setText(funcionario.getSenha());
jtnome.setEnabled(true);
jfcpf.setEnabled(true);
jtrua.setEnabled(true);
jtnumero.setEnabled(true);
jtcomplemento.setEnabled(true);
jtbairro.setEnabled(true);
jtcidade.setEnabled(true);
jcestado.setEnabled(true);
jfcep.setEnabled(true);
jftelefone.setEnabled(true);
jtemail.setEnabled(true);
jtdatanascimento.setEnabled(true);
jcsexo.setEnabled(true);
jfcelular.setEnabled(true);
jtusuario.setEnabled(true);
jtsenha.setEnabled(true);
jcbusca.setSelected(false);
limparTabelaFuncionario();
jbeditarfuncionario.setEnabled(false);
jbexcluir.setEnabled(true);
jbatualizar.setEnabled(true);
    }//GEN-LAST:event_jbeditarfuncionarioActionPerformed

    private void jbatualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbatualizarActionPerformed
limparTabelaFuncionario();
if (checacampos(null) == true){
Funcionario funcionario = new Funcionario();
funcionario.setCodigo(jtcodigo.getText());
funcionario.setNome(jtnome.getText());
funcionario.setCpf(jfcpf.getText());
funcionario.setRua(jtrua.getText());
funcionario.setCelular(jfcelular.getText());
        try {
            funcionario.setDatanascimento(Utils.StrToDate(jtdatanascimento.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(FormCadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
funcionario.setNumero(jtnumero.getText());
funcionario.setComplemento(jtcomplemento.getText());
funcionario.setBairro(jtbairro.getText());
funcionario.setCidade(jtcidade.getText());
funcionario.setEstado(jcestado.getSelectedItem().toString());
funcionario.setCep(jfcep.getText());
funcionario.setTelefone(jftelefone.getText());
funcionario.setEmail(jtemail.getText());
funcionario.setSexo(jcsexo.getSelectedItem().toString());
funcionario.setUsuario(jtusuario.getText());
funcionario.setSenha(jtsenha.getText());

FuncionarioDao.atualizarFuncionario(funcionario);
JOptionPane.showMessageDialog(null,"funcionario Atualizado com Sucesso!");
jcbusca.setSelected(false);
jbeditarfuncionario.setEnabled(false);
jbexcluir.setEnabled(false);
jbatualizar.setEnabled(false);
jbinserir.setEnabled(true);
limpacampos();
   
}
    }//GEN-LAST:event_jbatualizarActionPerformed

    private void jtdatanascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtdatanascimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtdatanascimentoActionPerformed

    private void jtnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtnomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtnomeActionPerformed
    
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCadastroFuncionario().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbatualizar;
    private javax.swing.JButton jbbuscafuncionario;
    private javax.swing.JButton jbbuscartodos;
    private javax.swing.JButton jbeditarfuncionario;
    private javax.swing.JButton jbexcluir;
    private javax.swing.JButton jbinserir;
    private javax.swing.JCheckBox jcbusca;
    private javax.swing.JComboBox jcestado;
    private javax.swing.JComboBox jcsexo;
    private javax.swing.JFormattedTextField jfcelular;
    private javax.swing.JFormattedTextField jfcep;
    private javax.swing.JFormattedTextField jfcpf;
    private javax.swing.JFormattedTextField jfcpfbusca;
    private javax.swing.JFormattedTextField jftelefone;
    private javax.swing.JTextField jtbairro;
    private javax.swing.JTextField jtcidade;
    private javax.swing.JTextField jtcodigo;
    private javax.swing.JTextField jtcomplemento;
    private javax.swing.JFormattedTextField jtdatanascimento;
    private javax.swing.JTextField jtemail;
    private javax.swing.JTable jtfuncionario;
    private javax.swing.JTextField jtnome;
    private javax.swing.JTextField jtnumero;
    private javax.swing.JTextField jtrua;
    private javax.swing.JPasswordField jtsenha;
    private javax.swing.JTextField jtusuario;
    // End of variables declaration//GEN-END:variables

public void limpacampos(){
jtcodigo.setText(null);
jtnome.setText(null);
jfcpf.setText(null);
jtrua.setText(null);
jtnumero.setText(null);
jtcomplemento.setText(null);
jtbairro.setText(null);
jtcidade.setText(null);
jcestado.setSelectedItem(null);
jfcep.setText(null);
jftelefone.setValue(null);
jtemail.setText(null);
jtdatanascimento.setText(null);
jcsexo.setSelectedItem(null);
jfcelular.setText(null);
jtusuario.setText(null);
jtsenha.setText(null);
}

public boolean checacampos(String str){
str = "";
  
    if ( jtnome.getText().trim().isEmpty()){
        str += "Nome\n";
    }
    
    if (jtdatanascimento.getText().equals("  /  /    ")){
    str += "Data de Nascimento\n";

}
    
if (jcsexo.getSelectedItem()== null){
    str += "Sexo\n";

}

    if (jfcpf.getText().equals("   .   .   -  ")){
        str += "CPF\n";
    }
    
    if (jftelefone.getText().equals("(  )     -    ")){
    str += "Telefone\n";

}
    if (jtemail.getText().trim().isEmpty()){
    str += "Email\n";

}
       
    if (jtrua.getText().trim().isEmpty()){
        str += "Rua\n";
    }
    if (jtnumero.getText().trim().isEmpty()){
        str += "Número\n";
    }

if (jtbairro.getText().trim().isEmpty()){
    str += "Bairro\n";
}
if (jtcidade.getText().trim().isEmpty()){
    str += "Cidade\n";

}

if (jfcep.getText().equals("     -   ")){
    str += "CEP\n";

}


if (jcestado.getSelectedItem() == null){
    str += "Estado\n";

}

if (jtusuario.getText().trim().isEmpty()){
    str += "Usuario\n";

}

if (jtsenha.getText().trim().isEmpty()){
    str += "Senha\n";

}


if (str == ("")){
    return true;
}
else {
    
    JOptionPane.showMessageDialog(null,"Favor preencher os seguintes campos: \n"+ str);
    return false;
}

}

private void limparTabelaFuncionario()
    {
        DefaultTableModel modelo = (DefaultTableModel)jtfuncionario.getModel();
        for (int i = jtfuncionario.getRowCount() -1; i >= 0; --i)
        {
            modelo.removeRow(i);
        }
        
    }

public double checanumerofuncionario (double numerfuncionario){
ArrayList<Funcionario> lista = FuncionarioDao.getTodosFuncionario();
      
    if (!lista.isEmpty())
        {
          for(int i=0;i<lista.size();i++)
             { 
              double testenumero = Double.parseDouble(lista.get(i).getCodigo()); 
                 while (testenumero == numerfuncionario)
                   {
                   numerfuncionario += 1;
                                        
                   }
              }     
        }
return numerfuncionario;
}

}