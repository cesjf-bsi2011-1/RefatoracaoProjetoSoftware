package com.aluguelautomoveis.controllerview;

import com.aluguelautomoveis.model.FuncionarioBean;
import javax.swing.JOptionPane;
import com.aluguelautomoveis.util.DateFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import com.aluguelautomoveis.model.dao.FuncionarioDao;

/**
 *
 * @author Locadora de Veículo
 */
public class FormCadastroFuncionario extends javax.swing.JFrame {

    /**
     * Creates new form CadastroFuncionario
     */
    public FormCadastroFuncionario() {
        initComponents();
    }
    FuncionarioBean funcionario = null;
    String okfuncionario = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textFieldNomeCompleto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textFieldDataNascimento = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        comboBoxSexo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        textFieldCPF = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        textFieldTelefone = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        textFieldCelular = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        textFieldEmail = new javax.swing.JTextField();
        textFieldCodigo = new javax.swing.JTextField();
        textFieldUsuario = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        textFieldSenha = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        textFieldRua = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        textFieldNumero = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        textFieldComplemento = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        textFieldBairro = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        textFieldCidade = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        textFieldCEP = new javax.swing.JFormattedTextField();
        jLabel18 = new javax.swing.JLabel();
        comboBoxUF = new javax.swing.JComboBox();
        buttonInserir = new javax.swing.JButton();
        buttonExcluir = new javax.swing.JButton();
        buttonAtualizar = new javax.swing.JButton();
        buttonSair = new javax.swing.JButton();
        buttonLimpar = new javax.swing.JButton();
        checkBoxBuscarFuncionario = new javax.swing.JCheckBox();
        textFieldBuscarCPF = new javax.swing.JFormattedTextField();
        buttonBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFuncionarios = new javax.swing.JTable();
        buttonBuscarTodos = new javax.swing.JButton();
        buttonEditarFuncionario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 750));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro Funcionário"));

        jLabel1.setText("Nome Completo:");

        textFieldNomeCompleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNomeCompletoActionPerformed(evt);
            }
        });

        jLabel2.setText("Data de Nasc.");

        jLabel3.setText("Código:");

        try {
            textFieldDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        textFieldDataNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldDataNascimentoActionPerformed(evt);
            }
        });

        jLabel4.setText("Sexo:");

        comboBoxSexo.setMaximumRowCount(3);
        comboBoxSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Feminino", "Masculino", " " }));
        comboBoxSexo.setSelectedIndex(-1);

        jLabel5.setText("CPF:");

        try {
            textFieldCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel6.setText("Telefone:");

        try {
            textFieldTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel7.setText("Celular:");

        try {
            textFieldCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel9.setText("Email:");

        textFieldCodigo.setEnabled(false);

        jLabel10.setText("Usuário");

        jLabel8.setText("Senha");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel3)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(1, 1, 1)
                                .add(textFieldCodigo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(textFieldNomeCompleto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 330, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(textFieldDataNascimento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(1, 1, 1)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(2, 2, 2)
                                .add(textFieldTelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jLabel6))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel7)
                            .add(textFieldCelular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jLabel9)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(textFieldEmail))))
                .add(8, 8, 8)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel4)
                            .add(comboBoxSexo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel10))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(textFieldCPF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel5)))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(40, 40, 40)
                                .add(jLabel8)
                                .add(0, 74, Short.MAX_VALUE))))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(textFieldUsuario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(textFieldSenha)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel2)
                            .add(jLabel3)
                            .add(jLabel1))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(textFieldNomeCompleto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(textFieldDataNascimento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(textFieldCodigo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel5)
                            .add(jLabel4))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(textFieldCPF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(comboBoxSexo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(jLabel7)
                    .add(jLabel9)
                    .add(jLabel10)
                    .add(jLabel8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(textFieldTelefone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(textFieldCelular, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(textFieldEmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(textFieldUsuario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(textFieldSenha, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(0, 14, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro Endereço"));

        jLabel12.setText("Rua/Av.");

        jLabel13.setText("Num.");

        jLabel14.setText("Compl.");

        jLabel15.setText("Bairro");

        jLabel16.setText("Cidade");

        jLabel17.setText("CEP");

        try {
            textFieldCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel18.setText("UF");

        comboBoxUF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Acre", "Alagoas", "Amapá", "Amazonas", "Bahia", "Ceará", "Distrito Federal", "Espírito Santo", "Goiás", "Maranhão", "Mato Grosso", "Mato Grosso do Sul", "Minas Gerais", "Paraná", "Paraíba", "Pará", "Pernambuco", "Piauí", "Rio de Janeiro", "Rio Grande do Norte", "Rio Grande do Sul", "Rondonia", "Roraima", "Santa Catarina", "Sergipe", "São Paulo", "Tocantins" }));
        comboBoxUF.setSelectedIndex(-1);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel12)
                            .add(jLabel15)
                            .add(textFieldBairro))
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(textFieldCidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 152, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel16))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(textFieldCEP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel17))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel18)
                            .add(comboBoxUF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(textFieldRua)
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(textFieldNumero, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 59, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel13))
                        .add(18, 18, 18)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(textFieldComplemento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel14))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(jLabel13)
                    .add(jLabel14))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(textFieldRua, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(textFieldNumero, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(textFieldComplemento, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel15)
                    .add(jLabel16)
                    .add(jLabel17)
                    .add(jLabel18))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(textFieldBairro, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(textFieldCidade, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(textFieldCEP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(comboBoxUF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        buttonInserir.setText("Inserir Funcionario");
        buttonInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInserirActionPerformed(evt);
            }
        });

        buttonExcluir.setText("Excluir Funcionario");
        buttonExcluir.setEnabled(false);
        buttonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExcluirActionPerformed(evt);
            }
        });

        buttonAtualizar.setText("Atualizar Funcionario");
        buttonAtualizar.setEnabled(false);
        buttonAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAtualizarActionPerformed(evt);
            }
        });

        buttonSair.setText("Sair");
        buttonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSairActionPerformed(evt);
            }
        });

        buttonLimpar.setText("Limpar Funcionario");
        buttonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimparActionPerformed(evt);
            }
        });

        checkBoxBuscarFuncionario.setText("Buscar Funcionario");
        checkBoxBuscarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxBuscarFuncionarioActionPerformed(evt);
            }
        });

        try {
            textFieldBuscarCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        textFieldBuscarCPF.setEnabled(false);

        buttonBuscar.setText("Buscar");
        buttonBuscar.setEnabled(false);
        buttonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarActionPerformed(evt);
            }
        });

        tableFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Cpf", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableFuncionarios.getTableHeader().setReorderingAllowed(false);
        tableFuncionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableFuncionariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableFuncionarios);
        if (tableFuncionarios.getColumnModel().getColumnCount() > 0) {
            tableFuncionarios.getColumnModel().getColumn(0).setResizable(false);
            tableFuncionarios.getColumnModel().getColumn(1).setResizable(false);
            tableFuncionarios.getColumnModel().getColumn(2).setResizable(false);
            tableFuncionarios.getColumnModel().getColumn(3).setResizable(false);
        }

        buttonBuscarTodos.setText("Buscar Todos");
        buttonBuscarTodos.setEnabled(false);
        buttonBuscarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarTodosActionPerformed(evt);
            }
        });

        buttonEditarFuncionario.setText("Editar Funcionario");
        buttonEditarFuncionario.setEnabled(false);
        buttonEditarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditarFuncionarioActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(checkBoxBuscarFuncionario)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(textFieldBuscarCPF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonBuscar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonBuscarTodos)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonEditarFuncionario)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(buttonInserir)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonExcluir)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonAtualizar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(buttonLimpar)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonSair, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(checkBoxBuscarFuncionario)
                    .add(textFieldBuscarCPF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(buttonBuscar)
                    .add(buttonBuscarTodos)
                    .add(buttonEditarFuncionario))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(buttonSair)
                    .add(buttonLimpar)
                    .add(buttonInserir)
                    .add(buttonExcluir)
                    .add(buttonAtualizar))
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("Cadastro Funcionario");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonSairActionPerformed

    private void buttonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarActionPerformed
        limparTabelaFuncionario();
        funcionario = FuncionarioDao.getFuncionario(textFieldBuscarCPF.getText());

        DefaultTableModel modelo = (DefaultTableModel) tableFuncionarios.getModel();
        if (funcionario != null) {
            modelo.addRow(funcionario.getFuncionario());
            textFieldBuscarCPF.setText(null);
        } else {
            JOptionPane.showMessageDialog(null, "Funcionario Inexistente!\nNão foi possivel encontrar o Funcionario especificado!", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
        }
        textFieldBuscarCPF.setText(null);


    }//GEN-LAST:event_buttonBuscarActionPerformed

    private void buttonInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInserirActionPerformed
        if (checacampos(null) == true) {
            double numerfuncionario = Math.round(Math.random() * 1000);
            double random = checanumerofuncionario(numerfuncionario);
            textFieldCodigo.setText(Double.toString(random));
            FuncionarioBean funcionario = new FuncionarioBean();
            funcionario.setCodigo(textFieldCodigo.getText());
            funcionario.setNome(textFieldNomeCompleto.getText());
            funcionario.setCpf(textFieldCPF.getText());
            funcionario.setRua(textFieldRua.getText());
            funcionario.setCelular(textFieldCelular.getText());
            try {
                funcionario.setDatanascimento(DateFormat.StrToDate(textFieldDataNascimento.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(FormCadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
            }
            funcionario.setNumero(textFieldNumero.getText());
            funcionario.setComplemento(textFieldComplemento.getText());
            funcionario.setBairro(textFieldBairro.getText());
            funcionario.setCidade(textFieldCidade.getText());
            funcionario.setEstado(comboBoxUF.getSelectedItem().toString());
            funcionario.setCep(textFieldCEP.getText());
            funcionario.setTelefone(textFieldTelefone.getText());
            funcionario.setEmail(textFieldEmail.getText());
            funcionario.setSexo(comboBoxSexo.getSelectedItem().toString());
            funcionario.setUsuario(textFieldUsuario.getText());
            funcionario.setSenha(textFieldSenha.getText());

            if (FuncionarioDao.getFuncionario(funcionario.getCpf()) == null) {

                FuncionarioDao.addFuncionario(funcionario);
                JOptionPane.showMessageDialog(null, "Funcionario Cadastrado com Sucesso!");

                limpacampos();
            } else {
                JOptionPane.showMessageDialog(null, "Já existe Funcionario Cadastrado com este CPF!!!");
            }
        }


    }//GEN-LAST:event_buttonInserirActionPerformed

    private void checkBoxBuscarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxBuscarFuncionarioActionPerformed
        limpacampos();
        limparTabelaFuncionario();
        if (checkBoxBuscarFuncionario.isSelected()) {
            buttonBuscar.setEnabled(true);
            buttonExcluir.setEnabled(false);
            buttonAtualizar.setEnabled(false);
            buttonInserir.setEnabled(false);
            textFieldBuscarCPF.setEnabled(true);
            buttonBuscarTodos.setEnabled(true);
            textFieldNomeCompleto.setEnabled(false);
            textFieldCPF.setEnabled(false);
            textFieldRua.setEnabled(false);
            textFieldNumero.setEnabled(false);
            textFieldComplemento.setEnabled(false);
            textFieldBairro.setEnabled(false);
            textFieldCidade.setEnabled(false);
            comboBoxUF.setEnabled(false);
            textFieldCEP.setEnabled(false);
            textFieldTelefone.setEnabled(false);
            textFieldEmail.setEnabled(false);
            textFieldDataNascimento.setEnabled(false);
            comboBoxSexo.setEnabled(false);
            textFieldCelular.setEnabled(false);
            textFieldUsuario.setEnabled(false);
            textFieldSenha.setEnabled(false);
        } else {

            {
                buttonEditarFuncionario.setEnabled(false);
                buttonInserir.setEnabled(true);
                buttonExcluir.setEnabled(false);
                buttonAtualizar.setEnabled(false);
                buttonBuscar.setEnabled(false);
                textFieldBuscarCPF.setEnabled(false);
                buttonBuscarTodos.setEnabled(false);
                textFieldNomeCompleto.setEnabled(true);
                textFieldCPF.setEnabled(true);
                textFieldRua.setEnabled(true);
                textFieldNumero.setEnabled(true);
                textFieldComplemento.setEnabled(true);
                textFieldBairro.setEnabled(true);
                textFieldCidade.setEnabled(true);
                comboBoxUF.setEnabled(true);
                textFieldCEP.setEnabled(true);
                textFieldTelefone.setEnabled(true);
                textFieldEmail.setEnabled(true);
                textFieldDataNascimento.setEnabled(true);
                comboBoxSexo.setEnabled(true);
                textFieldCelular.setEnabled(true);
                textFieldUsuario.setEnabled(true);
                textFieldSenha.setEnabled(true);
            }
        }
    }//GEN-LAST:event_checkBoxBuscarFuncionarioActionPerformed

    private void buttonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExcluirActionPerformed
        String cpf = textFieldCPF.getText();
        if (FuncionarioDao.getFuncionario(cpf) != null) {

            int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja remover este funcionário?", "Remover", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if (resposta == 0) {
                FuncionarioDao.removerFuncionario(cpf);
                JOptionPane.showMessageDialog(null, "O funcionario foi removido com sucesso!!!");
                checkBoxBuscarFuncionario.setSelected(false);
                buttonEditarFuncionario.setEnabled(false);
                buttonExcluir.setEnabled(false);
                buttonAtualizar.setEnabled(false);
                buttonInserir.setEnabled(true);
                limparTabelaFuncionario();
                limpacampos();
            } else {
                JOptionPane.showMessageDialog(null, "O funcionario não foi removido.");
            }
        }
    }//GEN-LAST:event_buttonExcluirActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void buttonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimparActionPerformed
        limpacampos();
        limparTabelaFuncionario();
        buttonAtualizar.setEnabled(false);
        buttonExcluir.setEnabled(false);
        buttonInserir.setEnabled(true);
        checkBoxBuscarFuncionario.setSelected(false);
        buttonEditarFuncionario.setEnabled(false);
        buttonInserir.setEnabled(true);
        buttonExcluir.setEnabled(false);
        buttonAtualizar.setEnabled(false);
        buttonBuscar.setEnabled(false);
        textFieldBuscarCPF.setEnabled(false);
        buttonBuscarTodos.setEnabled(false);
        textFieldNomeCompleto.setEnabled(true);
        textFieldCPF.setEnabled(true);
        textFieldRua.setEnabled(true);
        textFieldNumero.setEnabled(true);
        textFieldComplemento.setEnabled(true);
        textFieldBairro.setEnabled(true);
        textFieldCidade.setEnabled(true);
        comboBoxUF.setEnabled(true);
        textFieldCEP.setEnabled(true);
        textFieldTelefone.setEnabled(true);
        textFieldEmail.setEnabled(true);
        textFieldDataNascimento.setEnabled(true);
        comboBoxSexo.setEnabled(true);
        textFieldCelular.setEnabled(true);
        textFieldUsuario.setEnabled(true);
        textFieldSenha.setEnabled(true);

    }//GEN-LAST:event_buttonLimparActionPerformed

    private void buttonBuscarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarTodosActionPerformed
        textFieldBuscarCPF.setText("");
        limparTabelaFuncionario();

        ArrayList<FuncionarioBean> lista = FuncionarioDao.getTodosFuncionario();

        DefaultTableModel modelo = (DefaultTableModel) tableFuncionarios.getModel();

        if (!lista.isEmpty()) {

            for (int i = 0; i < lista.size(); i++) {

                modelo.addRow(lista.get(i).getFuncionario());

            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum Funcionario cadastrado!", "ATENÇÃO!", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_buttonBuscarTodosActionPerformed

    private void tableFuncionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableFuncionariosMouseClicked
        if (okfuncionario != "ok") {
            if (tableFuncionarios.getSelectedRow() >= -1) {
                buttonEditarFuncionario.setEnabled(true);
                buttonAtualizar.setEnabled(false);
                buttonExcluir.setEnabled(false);
                buttonBuscar.setEnabled(false);
                buttonBuscarTodos.setEnabled(false);
            } else {

            }
        }
    }//GEN-LAST:event_tableFuncionariosMouseClicked

    private void buttonEditarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditarFuncionarioActionPerformed
        int linha = tableFuncionarios.getSelectedRow();
        String cpf = ((String) tableFuncionarios.getModel().getValueAt(linha, 2));
        funcionario = FuncionarioDao.getFuncionario(cpf);
        textFieldCodigo.setText(funcionario.getCodigo());
        textFieldNomeCompleto.setText(funcionario.getNome());
        textFieldCPF.setText(funcionario.getCpf());
        textFieldRua.setText(funcionario.getRua());
        textFieldNumero.setText(funcionario.getNumero());
        textFieldComplemento.setText(funcionario.getComplemento());
        textFieldBairro.setText(funcionario.getBairro());
        textFieldCidade.setText(funcionario.getCidade());
        comboBoxUF.setSelectedItem(funcionario.getEstado());
        textFieldCEP.setText(funcionario.getCep());
        textFieldTelefone.setValue(funcionario.getTelefone());
        textFieldEmail.setText(funcionario.getEmail());
        textFieldDataNascimento.setText(DateFormat.DateToStr(funcionario.getDatanascimento()));
        comboBoxSexo.setSelectedItem(funcionario.getSexo());
        textFieldCelular.setText(funcionario.getCelular());
        textFieldUsuario.setText(funcionario.getUsuario());
        textFieldSenha.setText(funcionario.getSenha());
        textFieldNomeCompleto.setEnabled(true);
        textFieldCPF.setEnabled(true);
        textFieldRua.setEnabled(true);
        textFieldNumero.setEnabled(true);
        textFieldComplemento.setEnabled(true);
        textFieldBairro.setEnabled(true);
        textFieldCidade.setEnabled(true);
        comboBoxUF.setEnabled(true);
        textFieldCEP.setEnabled(true);
        textFieldTelefone.setEnabled(true);
        textFieldEmail.setEnabled(true);
        textFieldDataNascimento.setEnabled(true);
        comboBoxSexo.setEnabled(true);
        textFieldCelular.setEnabled(true);
        textFieldUsuario.setEnabled(true);
        textFieldSenha.setEnabled(true);
        checkBoxBuscarFuncionario.setSelected(false);
        limparTabelaFuncionario();
        buttonEditarFuncionario.setEnabled(false);
        buttonExcluir.setEnabled(true);
        buttonAtualizar.setEnabled(true);
    }//GEN-LAST:event_buttonEditarFuncionarioActionPerformed

    private void buttonAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAtualizarActionPerformed
        limparTabelaFuncionario();
        if (checacampos(null) == true) {
            FuncionarioBean funcionario = new FuncionarioBean();
            funcionario.setCodigo(textFieldCodigo.getText());
            funcionario.setNome(textFieldNomeCompleto.getText());
            funcionario.setCpf(textFieldCPF.getText());
            funcionario.setRua(textFieldRua.getText());
            funcionario.setCelular(textFieldCelular.getText());
            try {
                funcionario.setDatanascimento(DateFormat.StrToDate(textFieldDataNascimento.getText()));
            } catch (ParseException ex) {
                Logger.getLogger(FormCadastroFuncionario.class.getName()).log(Level.SEVERE, null, ex);
            }
            funcionario.setNumero(textFieldNumero.getText());
            funcionario.setComplemento(textFieldComplemento.getText());
            funcionario.setBairro(textFieldBairro.getText());
            funcionario.setCidade(textFieldCidade.getText());
            funcionario.setEstado(comboBoxUF.getSelectedItem().toString());
            funcionario.setCep(textFieldCEP.getText());
            funcionario.setTelefone(textFieldTelefone.getText());
            funcionario.setEmail(textFieldEmail.getText());
            funcionario.setSexo(comboBoxSexo.getSelectedItem().toString());
            funcionario.setUsuario(textFieldUsuario.getText());
            funcionario.setSenha(textFieldSenha.getText());

            FuncionarioDao.atualizarFuncionario(funcionario);
            JOptionPane.showMessageDialog(null, "funcionario Atualizado com Sucesso!");
            checkBoxBuscarFuncionario.setSelected(false);
            buttonEditarFuncionario.setEnabled(false);
            buttonExcluir.setEnabled(false);
            buttonAtualizar.setEnabled(false);
            buttonInserir.setEnabled(true);
            limpacampos();

        }
    }//GEN-LAST:event_buttonAtualizarActionPerformed

    private void textFieldDataNascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldDataNascimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldDataNascimentoActionPerformed

    private void textFieldNomeCompletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNomeCompletoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldNomeCompletoActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCadastroFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCadastroFuncionario().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAtualizar;
    private javax.swing.JButton buttonBuscar;
    private javax.swing.JButton buttonBuscarTodos;
    private javax.swing.JButton buttonEditarFuncionario;
    private javax.swing.JButton buttonExcluir;
    private javax.swing.JButton buttonInserir;
    private javax.swing.JButton buttonLimpar;
    private javax.swing.JButton buttonSair;
    private javax.swing.JCheckBox checkBoxBuscarFuncionario;
    private javax.swing.JComboBox comboBoxSexo;
    private javax.swing.JComboBox comboBoxUF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableFuncionarios;
    private javax.swing.JTextField textFieldBairro;
    private javax.swing.JFormattedTextField textFieldBuscarCPF;
    private javax.swing.JFormattedTextField textFieldCEP;
    private javax.swing.JFormattedTextField textFieldCPF;
    private javax.swing.JFormattedTextField textFieldCelular;
    private javax.swing.JTextField textFieldCidade;
    private javax.swing.JTextField textFieldCodigo;
    private javax.swing.JTextField textFieldComplemento;
    private javax.swing.JFormattedTextField textFieldDataNascimento;
    private javax.swing.JTextField textFieldEmail;
    private javax.swing.JTextField textFieldNomeCompleto;
    private javax.swing.JTextField textFieldNumero;
    private javax.swing.JTextField textFieldRua;
    private javax.swing.JPasswordField textFieldSenha;
    private javax.swing.JFormattedTextField textFieldTelefone;
    private javax.swing.JTextField textFieldUsuario;
    // End of variables declaration//GEN-END:variables

    public void limpacampos() {
        textFieldCodigo.setText(null);
        textFieldNomeCompleto.setText(null);
        textFieldCPF.setText(null);
        textFieldRua.setText(null);
        textFieldNumero.setText(null);
        textFieldComplemento.setText(null);
        textFieldBairro.setText(null);
        textFieldCidade.setText(null);
        comboBoxUF.setSelectedItem(null);
        textFieldCEP.setText(null);
        textFieldTelefone.setValue(null);
        textFieldEmail.setText(null);
        textFieldDataNascimento.setText(null);
        comboBoxSexo.setSelectedItem(null);
        textFieldCelular.setText(null);
        textFieldUsuario.setText(null);
        textFieldSenha.setText(null);
    }

    public boolean checacampos(String str) {
        str = "";

        if (textFieldNomeCompleto.getText().trim().isEmpty()) {
            str += "Nome\n";
        }

        if (textFieldDataNascimento.getText().equals("  /  /    ")) {
            str += "Data de Nascimento\n";

        }

        if (comboBoxSexo.getSelectedItem() == null) {
            str += "Sexo\n";

        }

        if (textFieldCPF.getText().equals("   .   .   -  ")) {
            str += "CPF\n";
        }

        if (textFieldTelefone.getText().equals("(  )     -    ")) {
            str += "Telefone\n";

        }
        if (textFieldEmail.getText().trim().isEmpty()) {
            str += "Email\n";

        }

        if (textFieldRua.getText().trim().isEmpty()) {
            str += "Rua\n";
        }
        if (textFieldNumero.getText().trim().isEmpty()) {
            str += "Número\n";
        }

        if (textFieldBairro.getText().trim().isEmpty()) {
            str += "Bairro\n";
        }
        if (textFieldCidade.getText().trim().isEmpty()) {
            str += "Cidade\n";

        }

        if (textFieldCEP.getText().equals("     -   ")) {
            str += "CEP\n";

        }

        if (comboBoxUF.getSelectedItem() == null) {
            str += "Estado\n";

        }

        if (textFieldUsuario.getText().trim().isEmpty()) {
            str += "Usuario\n";

        }

        if (textFieldSenha.getText().trim().isEmpty()) {
            str += "Senha\n";

        }

        if (str == ("")) {
            return true;
        } else {

            JOptionPane.showMessageDialog(null, "Favor preencher os seguintes campos: \n" + str);
            return false;
        }

    }

    private void limparTabelaFuncionario() {
        DefaultTableModel modelo = (DefaultTableModel) tableFuncionarios.getModel();
        for (int i = tableFuncionarios.getRowCount() - 1; i >= 0; --i) {
            modelo.removeRow(i);
        }

    }

    public double checanumerofuncionario(double numerfuncionario) {
        ArrayList<FuncionarioBean> lista = FuncionarioDao.getTodosFuncionario();

        if (!lista.isEmpty()) {
            for (int i = 0; i < lista.size(); i++) {
                double testenumero = Double.parseDouble(lista.get(i).getCodigo());
                while (testenumero == numerfuncionario) {
                    numerfuncionario += 1;

                }
            }
        }
        return numerfuncionario;
    }

}
